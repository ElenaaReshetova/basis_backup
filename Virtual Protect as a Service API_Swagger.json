{
    "basePath": "/v1",
    "definitions": {
        "backup.InfoRestoredDisk": {
            "properties": {
                "computeId": {
                    "description": "Compute ID",
                    "type": "integer"
                },
                "diskId": {
                    "description": "Disk ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "bson.M": {
            "additionalProperties": true,
            "type": "object"
        },
        "compute.ItemComputeDisk": {
            "properties": {
                "_ckey": {
                    "description": "CKey",
                    "type": "string"
                },
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "acl": {
                    "additionalProperties": true,
                    "description": "Access Control List",
                    "type": "object"
                },
                "bootPartition": {
                    "description": "Boot partition",
                    "type": "integer"
                },
                "bus_number": {
                    "description": "Bus number",
                    "type": "integer"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "destructionTime": {
                    "description": "Destruction time",
                    "type": "integer"
                },
                "diskPath": {
                    "description": "Disk path",
                    "type": "string"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "imageId": {
                    "description": "Image ID",
                    "type": "integer"
                },
                "images": {
                    "description": "List image IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "iotune": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.IOTune"
                        }
                    ],
                    "description": "IO tune"
                },
                "iqn": {
                    "description": "IQN",
                    "type": "string"
                },
                "login": {
                    "description": "Login",
                    "type": "string"
                },
                "milestones": {
                    "description": "Milestones",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "order": {
                    "description": "Order",
                    "type": "integer"
                },
                "params": {
                    "description": "Params",
                    "type": "string"
                },
                "parentId": {
                    "description": "Parent ID",
                    "type": "integer"
                },
                "passwd": {
                    "description": "Password",
                    "type": "string"
                },
                "pci_slot": {
                    "description": "PCI slot",
                    "type": "integer"
                },
                "pool": {
                    "description": "Pool",
                    "type": "string"
                },
                "presentTo": {
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "description": "Present to",
                    "type": "object"
                },
                "purgeTime": {
                    "description": "Purge time",
                    "type": "integer"
                },
                "realityDeviceNumber": {
                    "description": "Reality device number",
                    "type": "integer"
                },
                "replication": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemReplication"
                        }
                    ],
                    "description": "Replication"
                },
                "resId": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "role": {
                    "description": "Role",
                    "type": "string"
                },
                "sepId": {
                    "description": "SepID",
                    "type": "integer"
                },
                "shareable": {
                    "description": "Shareable",
                    "type": "boolean"
                },
                "sizeAvailable": {
                    "description": "Size available",
                    "type": "number"
                },
                "sizeMax": {
                    "description": "Size max",
                    "type": "integer"
                },
                "sizeUsed": {
                    "description": "Size used",
                    "type": "number"
                },
                "snapshots": {
                    "description": "List extend snapshots",
                    "items": {
                        "$ref": "#/definitions/compute.SnapshotExtend"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "techStatus": {
                    "description": "Tech status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "vmid": {
                    "description": "Virtual machine ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "compute.ItemSnapSet": {
            "properties": {
                "disks": {
                    "description": "List disk IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "label": {
                    "description": "Label",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "compute.ItemVNFInterface": {
            "properties": {
                "bus_number": {
                    "description": "Bus number",
                    "type": "integer"
                },
                "connId": {
                    "description": "Connection ID",
                    "type": "integer"
                },
                "connType": {
                    "description": "Connection type",
                    "type": "string"
                },
                "defGw": {
                    "description": "Default GW",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enabled",
                    "type": "boolean"
                },
                "flipgroupId": {
                    "description": "FLIPGroup ID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "ipAddress": {
                    "description": "IP address",
                    "type": "string"
                },
                "libvirtSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.LibvirtSettings"
                        }
                    ],
                    "description": "Libvirt Settings"
                },
                "listenSsh": {
                    "description": "Listen SSH or not",
                    "type": "boolean"
                },
                "mac": {
                    "description": "MAC",
                    "type": "string"
                },
                "mtu": {
                    "description": "Maximum transmission unit",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "netId": {
                    "description": "Network ID",
                    "type": "integer"
                },
                "netMask": {
                    "description": "Network mask",
                    "type": "integer"
                },
                "netType": {
                    "description": "Network type",
                    "type": "string"
                },
                "nodeId": {
                    "description": "NodeID",
                    "type": "integer"
                },
                "pciSlot": {
                    "description": "PCI slot",
                    "type": "integer"
                },
                "qos": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.QOS"
                        }
                    ],
                    "description": "QOS"
                },
                "target": {
                    "description": "Target",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "vnfs": {
                    "description": "List VNF IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "compute.SnapshotExtend": {
            "properties": {
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "label": {
                    "description": "Label",
                    "type": "string"
                },
                "referenceId": {
                    "description": "Reference ID",
                    "type": "string"
                },
                "resId": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "snapSetGuid": {
                    "description": "SnapSetGUID",
                    "type": "string"
                },
                "snapSetTime": {
                    "description": "SnapSetTime",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "TimeStamp",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "gin.H": {
            "additionalProperties": {},
            "type": "object"
        },
        "github_com_vmware-tanzu_velero_pkg_apis_velero_v1.PolicyType": {
            "enum": [
                "none",
                "update"
            ],
            "type": "string",
            "x-enum-varnames": [
                "PolicyTypeNone",
                "PolicyTypeUpdate"
            ]
        },
        "internal_controllers.DashboardResponse": {
            "properties": {
                "accounts": {
                    "type": "integer"
                },
                "clusterBackups": {
                    "type": "integer"
                },
                "clusters": {
                    "type": "integer"
                },
                "restores": {
                    "type": "integer"
                },
                "schedules": {
                    "type": "integer"
                },
                "storages": {
                    "type": "integer"
                },
                "vmBackups": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.DiskAdminRequest": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "actionType": {
                    "enum": [
                        "present",
                        "depresent"
                    ],
                    "type": "string"
                },
                "cloudDiskAction": {
                    "properties": {
                        "nodeId": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "nodeId"
                    ],
                    "type": "object"
                },
                "diskId": {
                    "type": "integer"
                }
            },
            "required": [
                "accountId",
                "actionType",
                "cloudDiskAction",
                "diskId"
            ],
            "type": "object"
        },
        "internal_controllers.DiskAdminResponse": {
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "internal_controllers.GetDiskRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "diskId": {
                    "description": "ID диска",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.GetListVmsRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "cmpId": {
                    "description": "ID компании",
                    "type": "integer"
                },
                "cmpName": {
                    "description": "Название компании",
                    "type": "string"
                },
                "count": {
                    "description": "Количество ВМ для получения",
                    "type": "integer"
                },
                "page": {
                    "description": "Номер страницы",
                    "type": "integer"
                },
                "rgId": {
                    "description": "ID ресурсной группы",
                    "type": "integer"
                },
                "rgName": {
                    "description": "Название ресурсной группы",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "internal_controllers.GetSepAndPoolRequest": {
            "properties": {
                "accountId": {
                    "description": "Поле accountId",
                    "type": "integer"
                },
                "decortAccountId": {
                    "description": "Поле accountId",
                    "type": "integer"
                },
                "rgId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.GetSepRequest": {
            "properties": {
                "accountId": {
                    "description": "Поле accountId",
                    "type": "integer"
                },
                "sepId": {
                    "description": "Поле sepId",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.GetVmDisksRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "vmId": {
                    "description": "ID ВМ",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.GetVmRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "vmId": {
                    "description": "ID ВМ",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.HostRequest": {
            "properties": {
                "host": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListComputeBackupsResponse": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackup"
                    },
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListImagesRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "count": {
                    "description": "Количество",
                    "type": "integer"
                },
                "imageId": {
                    "description": "ID образа",
                    "type": "integer"
                },
                "imageName": {
                    "description": "Название образа",
                    "type": "string"
                },
                "page": {
                    "description": "Номер страницы",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListNodesRequest": {
            "properties": {
                "accountId": {
                    "description": "Поле accountId",
                    "type": "integer"
                },
                "nodeId": {
                    "description": "Поле nodeId",
                    "type": "integer"
                },
                "nodeName": {
                    "description": "Поле nodeName",
                    "type": "string"
                },
                "nodeRole": {
                    "description": "Поле nodeRole",
                    "type": "string"
                },
                "nodeStatus": {
                    "description": "Поле nodeStatus",
                    "type": "string"
                },
                "page": {
                    "description": "Поле page",
                    "type": "integer"
                },
                "size": {
                    "description": "Поле page",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListRgsRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "count": {
                    "description": "Количество",
                    "type": "integer"
                },
                "page": {
                    "description": "Номер страницы",
                    "type": "integer"
                },
                "rgId": {
                    "description": "ID РГ",
                    "type": "integer"
                },
                "rgName": {
                    "description": "Название РГ",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListSepsRequest": {
            "properties": {
                "accountId": {
                    "description": "Поле accountId",
                    "type": "integer"
                },
                "count": {
                    "description": "Поле count",
                    "type": "integer"
                },
                "page": {
                    "description": "Поле page",
                    "type": "integer"
                },
                "sepId": {
                    "description": "Поле sepId",
                    "type": "integer"
                },
                "sepName": {
                    "description": "Поле sepName",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListSepsRequestAdmin": {
            "properties": {
                "accountId": {
                    "description": "Поле accountId",
                    "type": "integer"
                },
                "consumedBy": {
                    "type": "integer"
                },
                "page": {
                    "description": "Поле page",
                    "type": "integer"
                },
                "providedBy": {
                    "type": "integer"
                },
                "sepId": {
                    "description": "Поле sepId",
                    "type": "integer"
                },
                "sepName": {
                    "description": "Поле sepName",
                    "type": "string"
                },
                "sepType": {
                    "description": "Поле sepType",
                    "type": "string"
                },
                "size": {
                    "description": "Поле page",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.ListVinsRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "count": {
                    "description": "Количество",
                    "type": "integer"
                },
                "page": {
                    "description": "Номер страницы",
                    "type": "integer"
                },
                "rgId": {
                    "description": "ID РГ",
                    "type": "integer"
                },
                "rgName": {
                    "description": "Название РГ",
                    "type": "string"
                },
                "vinsId": {
                    "description": "ID VINS",
                    "type": "integer"
                },
                "vinsName": {
                    "description": "Название VINS",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "internal_controllers.StartVmRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "vmId": {
                    "description": "ID ВМ",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.StopVmRequest": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "force": {
                    "description": "Принудительная остановка",
                    "type": "boolean"
                },
                "vmId": {
                    "description": "ID ВМ",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers.StopVmRequestAdmin": {
            "properties": {
                "accountId": {
                    "description": "ID аккаунта",
                    "type": "integer"
                },
                "depresent": {
                    "type": "boolean"
                },
                "force": {
                    "description": "Принудительная остановка",
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "vmId": {
                    "description": "ID ВМ",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "internal_controllers_backupcontroller.ListBackupComputeAgentsResponse": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_restypes.BackupComputeAgent"
                    },
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "locations.ItemLocation": {
            "properties": {
                "_ckey": {
                    "description": "CKey",
                    "type": "string"
                },
                "_meta": {
                    "description": "Meta",
                    "items": {},
                    "type": "array"
                },
                "authBroker": {
                    "description": "AuthBroker",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "flag": {
                    "description": "Flag",
                    "type": "string"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "locationCode": {
                    "description": "Location code",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "sdn_support": {
                    "description": "Support of SDN",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "locations.ListLocations": {
            "properties": {
                "data": {
                    "description": "Data",
                    "items": {
                        "$ref": "#/definitions/locations.ItemLocation"
                    },
                    "type": "array"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.IOTune": {
            "properties": {
                "read_bytes_sec": {
                    "description": "ReadBytesSec",
                    "type": "integer"
                },
                "read_bytes_sec_max": {
                    "description": "ReadBytesSecMax",
                    "type": "integer"
                },
                "read_iops_sec": {
                    "description": "ReadIOPSSec",
                    "type": "integer"
                },
                "read_iops_sec_max": {
                    "description": "ReadIOPSSecMax",
                    "type": "integer"
                },
                "size_iops_sec": {
                    "description": "SizeIOPSSec",
                    "type": "integer"
                },
                "total_bytes_sec": {
                    "description": "TotalBytesSec",
                    "type": "integer"
                },
                "total_bytes_sec_max": {
                    "description": "TotalBytesSecMax",
                    "type": "integer"
                },
                "total_iops_sec": {
                    "description": "TotalIOPSSec",
                    "type": "integer"
                },
                "total_iops_sec_max": {
                    "description": "TotalIOPSSecMax",
                    "type": "integer"
                },
                "write_bytes_sec": {
                    "description": "WriteBytesSec",
                    "type": "integer"
                },
                "write_bytes_sec_max": {
                    "description": "WriteBytesSecMax",
                    "type": "integer"
                },
                "write_iops_sec": {
                    "description": "WriteIOPSSec",
                    "type": "integer"
                },
                "write_iops_sec_max": {
                    "description": "WriteIOPSSecMax",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.InfoDisk": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemACL": {
            "properties": {
                "explicit": {
                    "description": "Explicit",
                    "type": "boolean"
                },
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "right": {
                    "description": "Right",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "userGroupId": {
                    "description": "User group ID",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemOSUser": {
            "properties": {
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "login": {
                    "description": "Login",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "pubkey": {
                    "description": "Public key",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemReplication": {
            "properties": {
                "diskId": {
                    "description": "DiskID",
                    "type": "integer"
                },
                "poolId": {
                    "description": "PoolID",
                    "type": "string"
                },
                "role": {
                    "description": "Role",
                    "type": "string"
                },
                "selfVolumeId": {
                    "description": "SelfVolumeID",
                    "type": "string"
                },
                "storageId": {
                    "description": "StorageID",
                    "type": "string"
                },
                "volumeId": {
                    "description": "VolumeID",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemRule": {
            "properties": {
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "key": {
                    "description": "Key",
                    "type": "string"
                },
                "mode": {
                    "description": "Mode",
                    "type": "string"
                },
                "policy": {
                    "description": "Policy",
                    "type": "string"
                },
                "topology": {
                    "description": "Topology",
                    "type": "string"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.LibvirtSettings": {
            "properties": {
                "event_idx": {
                    "description": "Event ID",
                    "type": "string"
                },
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "ioeventfd": {
                    "description": "IO event",
                    "type": "string"
                },
                "queues": {
                    "description": "Number of queues",
                    "type": "integer"
                },
                "rx_queue_size": {
                    "description": "RX queue size",
                    "type": "integer"
                },
                "tx_queue_size": {
                    "description": "TX queue size",
                    "type": "integer"
                },
                "txmode": {
                    "description": "TX mode",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.QOS": {
            "properties": {
                "eRate": {
                    "type": "integer"
                },
                "guid": {
                    "type": "string"
                },
                "inBurst": {
                    "type": "integer"
                },
                "inRate": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.RecordACL": {
            "properties": {
                "accountAcl": {
                    "description": "Account ACL list",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemACL"
                    },
                    "type": "array"
                },
                "computeAcl": {
                    "description": "Compute ACL list",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemACL"
                    },
                    "type": "array"
                },
                "rgAcl": {
                    "description": "Resource group ACL list",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemACL"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.RecordCompute": {
            "properties": {
                "ACL": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.RecordACL"
                        }
                    ],
                    "description": "Access Control List"
                },
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "accountName": {
                    "description": "Account name",
                    "type": "string"
                },
                "affinityLabel": {
                    "description": "Affinity label",
                    "type": "string"
                },
                "affinityRules": {
                    "description": "List affinity rules",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemRule"
                    },
                    "type": "array"
                },
                "affinityWeight": {
                    "description": "Affinity weight",
                    "type": "integer"
                },
                "antiAffinityRules": {
                    "description": "List anti affinity rules",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemRule"
                    },
                    "type": "array"
                },
                "arch": {
                    "description": "Architecture",
                    "type": "string"
                },
                "autoStart": {
                    "description": "Auto start when node restarted",
                    "type": "boolean"
                },
                "bootOrder": {
                    "description": "Boot order",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "bootType": {
                    "description": "Boot type",
                    "type": "string"
                },
                "bootdiskSize": {
                    "description": "Boot disk size",
                    "type": "integer"
                },
                "cdImageId": {
                    "description": "CD Image Id",
                    "type": "integer"
                },
                "chipset": {
                    "description": "Chipset",
                    "type": "string"
                },
                "cloneReference": {
                    "description": "Clone reference",
                    "type": "integer"
                },
                "clones": {
                    "description": "List clone IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "computeciId": {
                    "description": "Compute CI ID",
                    "type": "integer"
                },
                "cpupin": {
                    "description": "CPU Pin",
                    "type": "boolean"
                },
                "cpus": {
                    "description": "Number of cores",
                    "type": "integer"
                },
                "createdBy": {
                    "description": "Created by",
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "customFields": {
                    "additionalProperties": true,
                    "description": "Custom fields items",
                    "type": "object"
                },
                "deletedBy": {
                    "description": "Deleted by",
                    "type": "string"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "devices": {
                    "description": "Devices"
                },
                "disks": {
                    "description": "List disks in compute",
                    "items": {
                        "$ref": "#/definitions/compute.ItemComputeDisk"
                    },
                    "type": "array"
                },
                "driver": {
                    "description": "Driver",
                    "type": "string"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "integer"
                },
                "hotResize": {
                    "description": "Hot resize",
                    "type": "boolean"
                },
                "hpBacked": {
                    "description": "HPBacked",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "imageId": {
                    "description": "Image ID",
                    "type": "integer"
                },
                "imageName": {
                    "description": "Image name",
                    "type": "string"
                },
                "interfaces": {
                    "description": "List interfaces",
                    "items": {
                        "$ref": "#/definitions/compute.ItemVNFInterface"
                    },
                    "type": "array"
                },
                "loaderType": {
                    "description": "Loader type",
                    "type": "string"
                },
                "lockStatus": {
                    "description": "Lock status",
                    "type": "string"
                },
                "managerId": {
                    "description": "Manager ID",
                    "type": "integer"
                },
                "managerType": {
                    "description": "Manager type",
                    "type": "string"
                },
                "migrationjob": {
                    "description": "Migration job",
                    "type": "integer"
                },
                "milestones": {
                    "description": "Milestones",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "natableVinsId": {
                    "description": "Natable VINS ID",
                    "type": "integer"
                },
                "natableVinsIp": {
                    "description": "Natable VINS IP",
                    "type": "string"
                },
                "natableVinsName": {
                    "description": "Natable VINS Name",
                    "type": "string"
                },
                "natableVinsNetwork": {
                    "description": "Natable VINS network",
                    "type": "string"
                },
                "natableVinsNetworkName": {
                    "description": "Natable VINS network name",
                    "type": "string"
                },
                "needReboot": {
                    "description": "NeedReboot",
                    "type": "boolean"
                },
                "networkInterfaceNaming": {
                    "description": "Network interface naming",
                    "type": "string"
                },
                "numaAffinity": {
                    "description": "Numa Affinity",
                    "type": "string"
                },
                "numaNodeId": {
                    "description": "NumaNodeId",
                    "type": "integer"
                },
                "osUsers": {
                    "description": "List OS Users",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemOSUser"
                    },
                    "type": "array"
                },
                "pinnedToStack": {
                    "description": "Pinned to stack",
                    "type": "boolean"
                },
                "preferredCpu": {
                    "description": "PreferredCPU",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "ram": {
                    "description": "Number of RAM",
                    "type": "integer"
                },
                "referenceId": {
                    "description": "Reference ID",
                    "type": "string"
                },
                "registered": {
                    "description": "Registered or not",
                    "type": "boolean"
                },
                "resName": {
                    "description": "Resource name",
                    "type": "string"
                },
                "reservedNodeCpus": {
                    "description": "Reserved Node Cpus",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "rgId": {
                    "description": "Resource group ID",
                    "type": "integer"
                },
                "rgName": {
                    "description": "Resource group name",
                    "type": "string"
                },
                "snapSets": {
                    "description": "List snapsets",
                    "items": {
                        "$ref": "#/definitions/compute.ItemSnapSet"
                    },
                    "type": "array"
                },
                "statelessSepId": {
                    "description": "Stateless SepID",
                    "type": "integer"
                },
                "statelessSepType": {
                    "description": "Stateless SepType",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags",
                    "type": "object"
                },
                "techStatus": {
                    "description": "Tech status",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "updatedTime": {
                    "description": "Updated time",
                    "type": "integer"
                },
                "userManaged": {
                    "description": "User Managed or not",
                    "type": "boolean"
                },
                "userdata": {
                    "description": "Userdata"
                },
                "vgpus": {
                    "description": "vGPUs list",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.VGPUItem"
                    },
                    "type": "array"
                },
                "virtualImageId": {
                    "description": "Virtual image ID",
                    "type": "integer"
                },
                "virtualImageName": {
                    "description": "Virtual image name",
                    "type": "string"
                },
                "vncPasswd": {
                    "description": "VNC password",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.VGPUItem": {
            "properties": {
                "accountId": {
                    "description": "AccountID",
                    "type": "integer"
                },
                "bus_number": {
                    "description": "BusNumber",
                    "type": "integer"
                },
                "createdTime": {
                    "description": "CreatedTime",
                    "type": "integer"
                },
                "deletedTime": {
                    "description": "DeletedTime",
                    "type": "integer"
                },
                "gid": {
                    "description": "GID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "lastClaimedBy": {
                    "description": "LastClaimedBy",
                    "type": "integer"
                },
                "lastUpdateTime": {
                    "description": "LastUpdateTime",
                    "type": "integer"
                },
                "mode": {
                    "description": "Mode",
                    "type": "string"
                },
                "pciSlot": {
                    "description": "PCISlot",
                    "type": "integer"
                },
                "pgpuid": {
                    "description": "PGPuid",
                    "type": "integer"
                },
                "profileId": {
                    "description": "ProfileID",
                    "type": "integer"
                },
                "ram": {
                    "description": "RAM",
                    "type": "integer"
                },
                "referenceId": {
                    "description": "ReferenceID",
                    "type": "string"
                },
                "rgId": {
                    "description": "RgID",
                    "type": "integer"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "vmid": {
                    "description": "VMID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.IOTune": {
            "properties": {
                "read_bytes_sec": {
                    "description": "ReadBytesSec",
                    "type": "integer"
                },
                "read_bytes_sec_max": {
                    "description": "ReadBytesSecMax",
                    "type": "integer"
                },
                "read_iops_sec": {
                    "description": "ReadIOPSSec",
                    "type": "integer"
                },
                "read_iops_sec_max": {
                    "description": "ReadIOPSSecMax",
                    "type": "integer"
                },
                "size_iops_sec": {
                    "description": "SizeIOPSSec",
                    "type": "integer"
                },
                "total_bytes_sec": {
                    "description": "TotalBytesSec",
                    "type": "integer"
                },
                "total_bytes_sec_max": {
                    "description": "TotalBytesSecMax",
                    "type": "integer"
                },
                "total_iops_sec": {
                    "description": "TotalIOPSSec",
                    "type": "integer"
                },
                "total_iops_sec_max": {
                    "description": "TotalIOPSSecMax",
                    "type": "integer"
                },
                "write_bytes_sec": {
                    "description": "WriteBytesSec",
                    "type": "integer"
                },
                "write_bytes_sec_max": {
                    "description": "WriteBytesSecMax",
                    "type": "integer"
                },
                "write_iops_sec": {
                    "description": "WriteIOPSSec",
                    "type": "integer"
                },
                "write_iops_sec_max": {
                    "description": "WriteIOPSSecMax",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemDisk": {
            "properties": {
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "accountName": {
                    "description": "Account name",
                    "type": "string"
                },
                "acl": {
                    "additionalProperties": true,
                    "description": "Access Control List",
                    "type": "object"
                },
                "computes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Computes",
                    "type": "object"
                },
                "createdBy": {
                    "description": "Created by",
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "deletedBy": {
                    "description": "Deleted by",
                    "type": "string"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "destructionTime": {
                    "description": "Destruction time",
                    "type": "integer"
                },
                "devicename": {
                    "description": "Device name",
                    "type": "string"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "imageId": {
                    "description": "Image ID",
                    "type": "integer"
                },
                "images": {
                    "description": "List of image IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "iotune": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.IOTune"
                        }
                    ],
                    "description": "IOTune"
                },
                "machineId": {
                    "description": "Machine ID",
                    "type": "integer"
                },
                "machineName": {
                    "description": "Machine name",
                    "type": "string"
                },
                "milestones": {
                    "description": "Milestones",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "order": {
                    "description": "Order",
                    "type": "integer"
                },
                "params": {
                    "description": "Params",
                    "type": "string"
                },
                "parentId": {
                    "description": "Parent ID",
                    "type": "integer"
                },
                "pciSlot": {
                    "description": "PCI slot",
                    "type": "integer"
                },
                "pool": {
                    "description": "Pool",
                    "type": "string"
                },
                "presentTo": {
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "description": "Present to",
                    "type": "object"
                },
                "purgeTime": {
                    "description": "Purge time",
                    "type": "integer"
                },
                "replication": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemReplication"
                        }
                    ],
                    "description": "Replication"
                },
                "resId": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "resName": {
                    "description": "Resource name",
                    "type": "string"
                },
                "role": {
                    "description": "Role",
                    "type": "string"
                },
                "sepId": {
                    "description": "SepID",
                    "type": "integer"
                },
                "sepType": {
                    "description": "SepType",
                    "type": "string"
                },
                "shareable": {
                    "description": "Shareable",
                    "type": "boolean"
                },
                "sizeAvailable": {
                    "description": "Size available",
                    "type": "number"
                },
                "sizeMax": {
                    "description": "Size max",
                    "type": "integer"
                },
                "sizeUsed": {
                    "description": "Size used",
                    "type": "number"
                },
                "snapshots": {
                    "description": "List of snapshots",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemSnapshot"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "techStatus": {
                    "description": "Tech status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "updatedTime": {
                    "description": "Update time",
                    "type": "integer"
                },
                "vmid": {
                    "description": "Virtual machine ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemReplication": {
            "properties": {
                "diskId": {
                    "description": "DiskID",
                    "type": "integer"
                },
                "poolId": {
                    "description": "PoolID",
                    "type": "string"
                },
                "role": {
                    "description": "Role",
                    "type": "string"
                },
                "selfVolumeId": {
                    "description": "SelfVolumeID",
                    "type": "string"
                },
                "storageId": {
                    "description": "StorageID",
                    "type": "string"
                },
                "volumeId": {
                    "description": "VolumeID",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemSnapshot": {
            "properties": {
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "label": {
                    "description": "Label",
                    "type": "string"
                },
                "referenceId": {
                    "type": "string"
                },
                "resId": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "snapSetGuid": {
                    "description": "SnapSetGUID",
                    "type": "string"
                },
                "snapSetTime": {
                    "description": "SnapSetTime",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "TimeStamp",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ListDisks": {
            "properties": {
                "data": {
                    "description": "Data",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemDisk"
                    },
                    "type": "array"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ListTypes": {
            "properties": {
                "data": {
                    "description": "Data",
                    "items": {},
                    "type": "array"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.RecordDisk": {
            "properties": {
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "accountName": {
                    "description": "Account name",
                    "type": "string"
                },
                "acl": {
                    "additionalProperties": true,
                    "description": "Access Control List",
                    "type": "object"
                },
                "computes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Computes",
                    "type": "object"
                },
                "createdBy": {
                    "description": "Created by",
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "deletedBy": {
                    "description": "Deleted by",
                    "type": "string"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "destructionTime": {
                    "description": "Destruction time",
                    "type": "integer"
                },
                "devicename": {
                    "description": "Device name",
                    "type": "string"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "imageId": {
                    "description": "Image ID",
                    "type": "integer"
                },
                "images": {
                    "description": "List of image IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "iotune": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.IOTune"
                        }
                    ],
                    "description": "IOTune"
                },
                "machineId": {
                    "description": "Machine ID",
                    "type": "integer"
                },
                "machineName": {
                    "description": "Machine name",
                    "type": "string"
                },
                "milestones": {
                    "description": "Milestones",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "order": {
                    "description": "Order",
                    "type": "integer"
                },
                "params": {
                    "description": "Params",
                    "type": "string"
                },
                "parentId": {
                    "description": "Parent ID",
                    "type": "integer"
                },
                "pciSlot": {
                    "description": "PCI slot",
                    "type": "integer"
                },
                "pool": {
                    "description": "Pool",
                    "type": "string"
                },
                "presentTo": {
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "description": "Present to",
                    "type": "object"
                },
                "purgeTime": {
                    "description": "Purge time",
                    "type": "integer"
                },
                "replication": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemReplication"
                        }
                    ],
                    "description": "Replication"
                },
                "resId": {
                    "description": "Resource ID",
                    "type": "string"
                },
                "resName": {
                    "description": "Resource name",
                    "type": "string"
                },
                "role": {
                    "description": "Role",
                    "type": "string"
                },
                "sepId": {
                    "description": "SepID",
                    "type": "integer"
                },
                "sepType": {
                    "description": "SepType",
                    "type": "string"
                },
                "shareable": {
                    "description": "Shareable",
                    "type": "boolean"
                },
                "sizeAvailable": {
                    "description": "Size available",
                    "type": "number"
                },
                "sizeMax": {
                    "description": "Size max",
                    "type": "integer"
                },
                "sizeUsed": {
                    "description": "Size used",
                    "type": "number"
                },
                "snapshots": {
                    "description": "List of snapshots",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ItemSnapshot"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "techStatus": {
                    "description": "Tech status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "updatedTime": {
                    "description": "Update time",
                    "type": "integer"
                },
                "vmid": {
                    "description": "Virtual machine ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_image.ItemImage": {
            "properties": {
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "architecture": {
                    "description": "Architecture",
                    "type": "string"
                },
                "bootType": {
                    "description": "Boot type",
                    "type": "string"
                },
                "bootable": {
                    "description": "Bootable",
                    "type": "boolean"
                },
                "cdrom": {
                    "description": "CDROM",
                    "type": "boolean"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "drivers": {
                    "description": "List drivers",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hotResize": {
                    "description": "HotResize",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "linkTo": {
                    "description": "Link to",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "networkInterfaceNaming": {
                    "description": "NetworkInterfaceNaming",
                    "type": "string"
                },
                "pool": {
                    "description": "Pool",
                    "type": "string"
                },
                "sepId": {
                    "description": "SepID",
                    "type": "integer"
                },
                "size": {
                    "description": "Size",
                    "type": "integer"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "virtual": {
                    "description": "Virtual",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_image.ListImages": {
            "properties": {
                "data": {
                    "description": "Data",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_image.ItemImage"
                    },
                    "type": "array"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_rg.ResourceLimits": {
            "properties": {
                "CU_C": {
                    "description": "CUC",
                    "type": "number"
                },
                "CU_D": {
                    "description": "CUD",
                    "type": "number"
                },
                "CU_DM": {
                    "description": "CUDM",
                    "type": "number"
                },
                "CU_I": {
                    "description": "CUI",
                    "type": "number"
                },
                "CU_M": {
                    "description": "CUM",
                    "type": "number"
                },
                "CU_NP": {
                    "description": "CUNP",
                    "type": "number"
                },
                "gpu_units": {
                    "description": "GPU units",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_vins.ItemVINS": {
            "properties": {
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "accountName": {
                    "description": "Account name",
                    "type": "string"
                },
                "createdBy": {
                    "description": "Created by",
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "deletedBy": {
                    "description": "Deleted by",
                    "type": "string"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "externalIP": {
                    "description": "External IP",
                    "type": "string"
                },
                "extnetId": {
                    "description": "Extnet ID",
                    "type": "integer"
                },
                "freeIPs": {
                    "description": "Free IPs",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "network": {
                    "description": "Network",
                    "type": "string"
                },
                "rgId": {
                    "description": "Resource group ID",
                    "type": "integer"
                },
                "rgName": {
                    "description": "Resource group name",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "updatedTime": {
                    "description": "Updated time",
                    "type": "integer"
                },
                "vxlanId": {
                    "description": "VXLAN ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_vins.ListVINS": {
            "properties": {
                "data": {
                    "description": "Data",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_vins.ItemVINS"
                    },
                    "type": "array"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "rg.ItemACL": {
            "properties": {
                "explicit": {
                    "description": "Explicit",
                    "type": "boolean"
                },
                "guid": {
                    "description": "GUID",
                    "type": "string"
                },
                "right": {
                    "description": "Right",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "type": {
                    "description": "Type",
                    "type": "string"
                },
                "userGroupId": {
                    "description": "User group ID",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "rg.ItemResourceGroup": {
            "properties": {
                "accountAcl": {
                    "$ref": "#/definitions/rg.ItemACL"
                },
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "accountName": {
                    "description": "Account name",
                    "type": "string"
                },
                "acl": {
                    "description": "Access Control List",
                    "items": {
                        "$ref": "#/definitions/rg.ItemACL"
                    },
                    "type": "array"
                },
                "computeFeatures": {
                    "description": "Compute Features",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cpu_allocation_parameter": {
                    "description": "CPU allocation parameter",
                    "type": "string"
                },
                "cpu_allocation_ratio": {
                    "description": "CPU allocation ratio",
                    "type": "number"
                },
                "createdBy": {
                    "description": "Created by",
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "def_net_id": {
                    "description": "DefNetID",
                    "type": "integer"
                },
                "def_net_type": {
                    "description": "DefNetType",
                    "type": "string"
                },
                "deletedBy": {
                    "description": "Deleted by",
                    "type": "string"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "dirty": {
                    "description": "Dirty",
                    "type": "boolean"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "integer"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "lockStatus": {
                    "description": "Lock status",
                    "type": "string"
                },
                "milestones": {
                    "description": "Milestones",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "resourceLimits": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_rg.ResourceLimits"
                        }
                    ],
                    "description": "Resource limits"
                },
                "resourceTypes": {
                    "description": "List of resource types",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "secret": {
                    "description": "Secret",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "uniqPools": {
                    "description": "UniqPools",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "updatedTime": {
                    "description": "Updated time",
                    "type": "integer"
                },
                "vins": {
                    "description": "List of VINS IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "vms": {
                    "description": "List of compute IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "rg.ListResourceGroups": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/rg.ItemResourceGroup"
                    },
                    "type": "array"
                },
                "entryCount": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "runtime.RawExtension": {
            "type": "object"
        },
        "time.Duration": {
            "enum": [
                -9223372036854776000,
                9223372036854776000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "type": "integer",
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "v1.Backup": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ],
                    "description": "+optional"
                },
                "spec": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupSpec"
                        }
                    ],
                    "description": "+optional"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupStatus"
                        }
                    ],
                    "description": "+optional"
                }
            },
            "type": "object"
        },
        "v1.BackupHooks": {
            "properties": {
                "resources": {
                    "description": "Resources are hooks that should be executed when backing up individual instances of a resource.\n+optional\n+nullable",
                    "items": {
                        "$ref": "#/definitions/v1.BackupResourceHookSpec"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.BackupList": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/v1.Backup"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ListMeta"
                        }
                    ],
                    "description": "+optional"
                }
            },
            "type": "object"
        },
        "v1.BackupPhase": {
            "enum": [
                "New",
                "FailedValidation",
                "InProgress",
                "WaitingForPluginOperations",
                "WaitingForPluginOperationsPartiallyFailed",
                "Finalizing",
                "FinalizingPartiallyFailed",
                "Completed",
                "PartiallyFailed",
                "Failed",
                "Deleting"
            ],
            "type": "string",
            "x-enum-varnames": [
                "BackupPhaseNew",
                "BackupPhaseFailedValidation",
                "BackupPhaseInProgress",
                "BackupPhaseWaitingForPluginOperations",
                "BackupPhaseWaitingForPluginOperationsPartiallyFailed",
                "BackupPhaseFinalizing",
                "BackupPhaseFinalizingPartiallyFailed",
                "BackupPhaseCompleted",
                "BackupPhasePartiallyFailed",
                "BackupPhaseFailed",
                "BackupPhaseDeleting"
            ]
        },
        "v1.BackupProgress": {
            "properties": {
                "itemsBackedUp": {
                    "description": "ItemsBackedUp is the number of items that have actually been written to the\nbackup tarball so far.\n+optional",
                    "type": "integer"
                },
                "totalItems": {
                    "description": "TotalItems is the total number of items to be backed up. This number may change\nthroughout the execution of the backup due to plugins that return additional related\nitems to back up, the velero.io/exclude-from-backup label, and various other\nfilters that happen as items are processed.\n+optional",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "v1.BackupResourceHook": {
            "properties": {
                "exec": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ExecHook"
                        }
                    ],
                    "description": "Exec defines an exec hook."
                }
            },
            "type": "object"
        },
        "v1.BackupResourceHookSpec": {
            "properties": {
                "excludedNamespaces": {
                    "description": "ExcludedNamespaces specifies the namespaces to which this hook spec does not apply.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedResources": {
                    "description": "ExcludedResources specifies the resources to which this hook spec does not apply.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedNamespaces": {
                    "description": "IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies\nto all namespaces.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedResources": {
                    "description": "IncludedResources specifies the resources to which this hook spec applies. If empty, it applies\nto all resources.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "labelSelector": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.LabelSelector"
                        }
                    ],
                    "description": "LabelSelector, if specified, filters the resources to which this hook spec applies.\n+optional\n+nullable"
                },
                "name": {
                    "description": "Name is the name of this hook.",
                    "type": "string"
                },
                "post": {
                    "description": "PostHooks is a list of BackupResourceHooks to execute after storing the item in the backup.\nThese are executed after all \"additional items\" from item actions are processed.\n+optional",
                    "items": {
                        "$ref": "#/definitions/v1.BackupResourceHook"
                    },
                    "type": "array"
                },
                "pre": {
                    "description": "PreHooks is a list of BackupResourceHooks to execute prior to storing the item in the backup.\nThese are executed before any \"additional items\" from item actions are processed.\n+optional",
                    "items": {
                        "$ref": "#/definitions/v1.BackupResourceHook"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.BackupSpec": {
            "properties": {
                "csiSnapshotTimeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "CSISnapshotTimeout specifies the time used to wait for CSI VolumeSnapshot status turns to\nReadyToUse during creation, before returning error as timeout.\nThe default value is 10 minute.\n+optional"
                },
                "datamover": {
                    "description": "DataMover specifies the data mover to be used by the backup.\nIf DataMover is \"\" or \"velero\", the built-in data mover will be used.\n+optional",
                    "type": "string"
                },
                "defaultVolumesToFsBackup": {
                    "description": "DefaultVolumesToFsBackup specifies whether pod volume file system backup should be used\nfor all volumes by default.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "defaultVolumesToRestic": {
                    "description": "DefaultVolumesToRestic specifies whether restic should be used to take a\nbackup of all pod volumes by default.\n\nDeprecated: this field is no longer used and will be removed entirely in future. Use DefaultVolumesToFsBackup instead.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "excludedClusterScopedResources": {
                    "description": "ExcludedClusterScopedResources is a slice of cluster-scoped\nresource type names to exclude from the backup.\nIf set to \"*\", all cluster-scoped resource types are excluded.\nThe default value is empty.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedNamespaceScopedResources": {
                    "description": "ExcludedNamespaceScopedResources is a slice of namespace-scoped\nresource type names to exclude from the backup.\nIf set to \"*\", all namespace-scoped resource types are excluded.\nThe default value is empty.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedNamespaces": {
                    "description": "ExcludedNamespaces contains a list of namespaces that are not\nincluded in the backup.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedResources": {
                    "description": "ExcludedResources is a slice of resource names that are not\nincluded in the backup.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hooks": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupHooks"
                        }
                    ],
                    "description": "Hooks represent custom behaviors that should be executed at different phases of the backup.\n+optional"
                },
                "includeClusterResources": {
                    "description": "IncludeClusterResources specifies whether cluster-scoped resources\nshould be included for consideration in the backup.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "includedClusterScopedResources": {
                    "description": "IncludedClusterScopedResources is a slice of cluster-scoped\nresource type names to include in the backup.\nIf set to \"*\", all cluster-scoped resource types are included.\nThe default value is empty, which means only related\ncluster-scoped resources are included.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedNamespaceScopedResources": {
                    "description": "IncludedNamespaceScopedResources is a slice of namespace-scoped\nresource type names to include in the backup.\nThe default value is \"*\".\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedNamespaces": {
                    "description": "IncludedNamespaces is a slice of namespace names to include objects\nfrom. If empty, all namespaces are included.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedResources": {
                    "description": "IncludedResources is a slice of resource names to include\nin the backup. If empty, all resources are included.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "itemOperationTimeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "ItemOperationTimeout specifies the time used to wait for asynchronous BackupItemAction operations\nThe default value is 1 hour.\n+optional"
                },
                "labelSelector": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.LabelSelector"
                        }
                    ],
                    "description": "LabelSelector is a metav1.LabelSelector to filter with\nwhen adding individual objects to the backup. If empty\nor nil, all objects are included. Optional.\n+optional\n+nullable"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Metadata"
                        }
                    ],
                    "description": "+optional"
                },
                "orLabelSelectors": {
                    "description": "OrLabelSelectors is list of metav1.LabelSelector to filter with\nwhen adding individual objects to the backup. If multiple provided\nthey will be joined by the OR operator. LabelSelector as well as\nOrLabelSelectors cannot co-exist in backup request, only one of them\ncan be used.\n+optional\n+nullable",
                    "items": {
                        "$ref": "#/definitions/v1.LabelSelector"
                    },
                    "type": "array"
                },
                "orderedResources": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "OrderedResources specifies the backup order of resources of specific Kind.\nThe map key is the resource name and value is a list of object names separated by commas.\nEach resource name has format \"namespace/objectname\".  For cluster resources, simply use \"objectname\".\n+optional\n+nullable",
                    "type": "object"
                },
                "resourcePolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.TypedLocalObjectReference"
                        }
                    ],
                    "description": "ResourcePolicy specifies the referenced resource policies that backup should follow\n+optional"
                },
                "snapshotMoveData": {
                    "description": "SnapshotMoveData specifies whether snapshot data should be moved\n+optional\n+nullable",
                    "type": "boolean"
                },
                "snapshotVolumes": {
                    "description": "SnapshotVolumes specifies whether to take snapshots\nof any PV's referenced in the set of objects included\nin the Backup.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "storageLocation": {
                    "description": "StorageLocation is a string containing the name of a BackupStorageLocation where the backup should be stored.\n+optional",
                    "type": "string"
                },
                "ttl": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "TTL is a time.Duration-parseable string describing how long\nthe Backup should be retained for.\n+optional"
                },
                "uploaderConfig": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.UploaderConfigForBackup"
                        }
                    ],
                    "description": "UploaderConfig specifies the configuration for the uploader.\n+optional\n+nullable"
                },
                "volumeSnapshotLocations": {
                    "description": "VolumeSnapshotLocations is a list containing names of VolumeSnapshotLocations associated with this backup.\n+optional",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.BackupStatus": {
            "properties": {
                "backupItemOperationsAttempted": {
                    "description": "BackupItemOperationsAttempted is the total number of attempted\nasync BackupItemAction operations for this backup.\n+optional",
                    "type": "integer"
                },
                "backupItemOperationsCompleted": {
                    "description": "BackupItemOperationsCompleted is the total number of successfully completed\nasync BackupItemAction operations for this backup.\n+optional",
                    "type": "integer"
                },
                "backupItemOperationsFailed": {
                    "description": "BackupItemOperationsFailed is the total number of async\nBackupItemAction operations for this backup which ended with an error.\n+optional",
                    "type": "integer"
                },
                "completionTimestamp": {
                    "description": "CompletionTimestamp records the time a backup was completed.\nCompletion time is recorded even on failed backups.\nCompletion time is recorded before uploading the backup object.\nThe server's time is used for CompletionTimestamps\n+optional\n+nullable",
                    "type": "string"
                },
                "csiVolumeSnapshotsAttempted": {
                    "description": "CSIVolumeSnapshotsAttempted is the total number of attempted\nCSI VolumeSnapshots for this backup.\n+optional",
                    "type": "integer"
                },
                "csiVolumeSnapshotsCompleted": {
                    "description": "CSIVolumeSnapshotsCompleted is the total number of successfully\ncompleted CSI VolumeSnapshots for this backup.\n+optional",
                    "type": "integer"
                },
                "errors": {
                    "description": "Errors is a count of all error messages that were generated during\nexecution of the backup.  The actual errors are in the backup's log\nfile in object storage.\n+optional",
                    "type": "integer"
                },
                "expiration": {
                    "description": "Expiration is when this Backup is eligible for garbage-collection.\n+optional\n+nullable",
                    "type": "string"
                },
                "failureReason": {
                    "description": "FailureReason is an error that caused the entire backup to fail.\n+optional",
                    "type": "string"
                },
                "formatVersion": {
                    "description": "FormatVersion is the backup format version, including major, minor, and patch version.\n+optional",
                    "type": "string"
                },
                "hookStatus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.HookStatus"
                        }
                    ],
                    "description": "HookStatus contains information about the status of the hooks.\n+optional\n+nullable"
                },
                "phase": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupPhase"
                        }
                    ],
                    "description": "Phase is the current state of the Backup.\n+optional"
                },
                "progress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupProgress"
                        }
                    ],
                    "description": "Progress contains information about the backup's execution progress. Note\nthat this information is best-effort only -- if Velero fails to update it\nduring a backup for any reason, it may be inaccurate/stale.\n+optional\n+nullable"
                },
                "startTimestamp": {
                    "description": "StartTimestamp records the time a backup was started.\nSeparate from CreationTimestamp, since that value changes\non restores.\nThe server's time is used for StartTimestamps\n+optional\n+nullable",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "ValidationErrors is a slice of all validation errors (if\napplicable).\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "version": {
                    "description": "Version is the backup format major version.\nDeprecated: Please see FormatVersion\n+optional",
                    "type": "integer"
                },
                "volumeSnapshotsAttempted": {
                    "description": "VolumeSnapshotsAttempted is the total number of attempted\nvolume snapshots for this backup.\n+optional",
                    "type": "integer"
                },
                "volumeSnapshotsCompleted": {
                    "description": "VolumeSnapshotsCompleted is the total number of successfully\ncompleted volume snapshots for this backup.\n+optional",
                    "type": "integer"
                },
                "warnings": {
                    "description": "Warnings is a count of all warning messages that were generated during\nexecution of the backup. The actual warnings are in the backup's log\nfile in object storage.\n+optional",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "v1.BackupStorageLocation": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/v1.ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/v1.BackupStorageLocationSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.BackupStorageLocationStatus"
                }
            },
            "type": "object"
        },
        "v1.BackupStorageLocationAccessMode": {
            "enum": [
                "ReadOnly",
                "ReadWrite"
            ],
            "type": "string",
            "x-enum-varnames": [
                "BackupStorageLocationAccessModeReadOnly",
                "BackupStorageLocationAccessModeReadWrite"
            ]
        },
        "v1.BackupStorageLocationList": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/v1.BackupStorageLocation"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/v1.ListMeta"
                }
            },
            "type": "object"
        },
        "v1.BackupStorageLocationPhase": {
            "enum": [
                "Available",
                "Unavailable"
            ],
            "type": "string",
            "x-enum-varnames": [
                "BackupStorageLocationPhaseAvailable",
                "BackupStorageLocationPhaseUnavailable"
            ]
        },
        "v1.BackupStorageLocationSpec": {
            "properties": {
                "accessMode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupStorageLocationAccessMode"
                        }
                    ],
                    "description": "AccessMode defines the permissions for the backup storage location.\n+optional"
                },
                "backupSyncPeriod": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "BackupSyncPeriod defines how frequently to sync backup API objects from object storage. A value of 0 disables sync.\n+optional\n+nullable"
                },
                "config": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Config is for provider-specific configuration fields.\n+optional",
                    "type": "object"
                },
                "credential": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.SecretKeySelector"
                        }
                    ],
                    "description": "Credential contains the credential information intended to be used with this location\n+optional"
                },
                "default": {
                    "description": "Default indicates this location is the default backup storage location.\n+optional",
                    "type": "boolean"
                },
                "objectStorage": {
                    "$ref": "#/definitions/v1.ObjectStorageLocation"
                },
                "provider": {
                    "description": "Provider is the provider of the backup storage.",
                    "type": "string"
                },
                "validationFrequency": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "ValidationFrequency defines how frequently to validate the corresponding object storage. A value of 0 disables validation.\n+optional\n+nullable"
                }
            },
            "type": "object"
        },
        "v1.BackupStorageLocationStatus": {
            "properties": {
                "accessMode": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupStorageLocationAccessMode"
                        }
                    ],
                    "description": "AccessMode is an unused field.\n\nDeprecated: there is now an AccessMode field on the Spec and this field\nwill be removed entirely as of v2.0.\n+optional"
                },
                "lastSyncedRevision": {
                    "description": "LastSyncedRevision is the value of the `metadata/revision` file in the backup\nstorage location the last time the BSL's contents were synced into the cluster.\n\nDeprecated: this field is no longer updated or used for detecting changes to\nthe location's contents and will be removed entirely in v2.0.\n+optional",
                    "type": "string"
                },
                "lastSyncedTime": {
                    "description": "LastSyncedTime is the last time the contents of the location were synced into\nthe cluster.\n+optional\n+nullable",
                    "type": "string"
                },
                "lastValidationTime": {
                    "description": "LastValidationTime is the last time the backup store location was validated\nthe cluster.\n+optional\n+nullable",
                    "type": "string"
                },
                "message": {
                    "description": "Message is a message about the backup storage location's status.\n+optional",
                    "type": "string"
                },
                "phase": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupStorageLocationPhase"
                        }
                    ],
                    "description": "Phase is the current state of the BackupStorageLocation.\n+optional"
                }
            },
            "type": "object"
        },
        "v1.Duration": {
            "properties": {
                "time.Duration": {
                    "enum": [
                        -9223372036854776000,
                        9223372036854776000,
                        1,
                        1000,
                        1000000,
                        1000000000,
                        60000000000,
                        3600000000000
                    ],
                    "type": "integer",
                    "x-enum-varnames": [
                        "minDuration",
                        "maxDuration",
                        "Nanosecond",
                        "Microsecond",
                        "Millisecond",
                        "Second",
                        "Minute",
                        "Hour"
                    ]
                }
            },
            "type": "object"
        },
        "v1.ExecHook": {
            "properties": {
                "command": {
                    "description": "Command is the command and arguments to execute.\n+kubebuilder:validation:MinItems=1",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "container": {
                    "description": "Container is the container in the pod where the command should be executed. If not specified,\nthe pod's first container is used.\n+optional",
                    "type": "string"
                },
                "onError": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.HookErrorMode"
                        }
                    ],
                    "description": "OnError specifies how Velero should behave if it encounters an error executing this hook.\n+optional"
                },
                "timeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "Timeout defines the maximum amount of time Velero should wait for the hook to complete before\nconsidering the execution a failure.\n+optional"
                }
            },
            "type": "object"
        },
        "v1.ExecRestoreHook": {
            "properties": {
                "command": {
                    "description": "Command is the command and arguments to execute from within a container after a pod has been restored.\n+kubebuilder:validation:MinItems=1",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "container": {
                    "description": "Container is the container in the pod where the command should be executed. If not specified,\nthe pod's first container is used.\n+optional",
                    "type": "string"
                },
                "execTimeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "ExecTimeout defines the maximum amount of time Velero should wait for the hook to complete before\nconsidering the execution a failure.\n+optional"
                },
                "onError": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.HookErrorMode"
                        }
                    ],
                    "description": "OnError specifies how Velero should behave if it encounters an error executing this hook.\n+optional"
                },
                "waitForReady": {
                    "description": "WaitForReady ensures command will be launched when container is Ready instead of Running.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "waitTimeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "WaitTimeout defines the maximum amount of time Velero should wait for the container to be Ready\nbefore attempting to run the command.\n+optional"
                }
            },
            "type": "object"
        },
        "v1.FieldsV1": {
            "type": "object"
        },
        "v1.HookErrorMode": {
            "enum": [
                "Continue",
                "Fail"
            ],
            "type": "string",
            "x-enum-varnames": [
                "HookErrorModeContinue",
                "HookErrorModeFail"
            ]
        },
        "v1.HookStatus": {
            "properties": {
                "hooksAttempted": {
                    "description": "HooksAttempted is the total number of attempted hooks\nSpecifically, HooksAttempted represents the number of hooks that failed to execute\nand the number of hooks that executed successfully.\n+optional",
                    "type": "integer"
                },
                "hooksFailed": {
                    "description": "HooksFailed is the total number of hooks which ended with an error\n+optional",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "v1.InitRestoreHook": {
            "properties": {
                "initContainers": {
                    "description": "+kubebuilder:pruning:PreserveUnknownFields\nInitContainers is list of init containers to be added to a pod during its restore.\n+optional",
                    "items": {
                        "$ref": "#/definitions/runtime.RawExtension"
                    },
                    "type": "array"
                },
                "timeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "Timeout defines the maximum amount of time Velero should wait for the initContainers to complete.\n+optional"
                }
            },
            "type": "object"
        },
        "v1.LabelSelector": {
            "properties": {
                "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
                    "items": {
                        "$ref": "#/definitions/v1.LabelSelectorRequirement"
                    },
                    "type": "array"
                },
                "matchLabels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "v1.LabelSelectorOperator": {
            "enum": [
                "In",
                "NotIn",
                "Exists",
                "DoesNotExist"
            ],
            "type": "string",
            "x-enum-varnames": [
                "LabelSelectorOpIn",
                "LabelSelectorOpNotIn",
                "LabelSelectorOpExists",
                "LabelSelectorOpDoesNotExist"
            ]
        },
        "v1.LabelSelectorRequirement": {
            "properties": {
                "key": {
                    "description": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge",
                    "type": "string"
                },
                "operator": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.LabelSelectorOperator"
                        }
                    ],
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                },
                "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.ListMeta": {
            "properties": {
                "continue": {
                    "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
                    "type": "string"
                },
                "remainingItemCount": {
                    "description": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional",
                    "type": "integer"
                },
                "resourceVersion": {
                    "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "v1.ManagedFieldsEntry": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                },
                "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                },
                "fieldsV1": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.FieldsV1"
                        }
                    ],
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
                },
                "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                },
                "operation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ManagedFieldsOperationType"
                        }
                    ],
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
                },
                "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                },
                "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "v1.ManagedFieldsOperationType": {
            "enum": [
                "Apply",
                "Update"
            ],
            "type": "string",
            "x-enum-varnames": [
                "ManagedFieldsOperationApply",
                "ManagedFieldsOperationUpdate"
            ]
        },
        "v1.Metadata": {
            "properties": {
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "v1.ObjectMeta": {
            "properties": {
                "annotations": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object"
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    },
                    "type": "array"
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "v1.ObjectStorageLocation": {
            "properties": {
                "bucket": {
                    "description": "Bucket is the bucket to use for object storage.",
                    "type": "string"
                },
                "caCert": {
                    "description": "CACert defines a CA bundle to use when verifying TLS connections to the provider.\n+optional",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "prefix": {
                    "description": "Prefix is the path inside a bucket to use for Velero storage. Optional.\n+optional",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "v1.OwnerReference": {
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.\n+optional",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "v1.Restore": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ],
                    "description": "+optional"
                },
                "spec": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RestoreSpec"
                        }
                    ],
                    "description": "+optional"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RestoreStatus"
                        }
                    ],
                    "description": "+optional"
                }
            },
            "type": "object"
        },
        "v1.RestoreHooks": {
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/definitions/v1.RestoreResourceHookSpec"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.RestoreList": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/v1.Restore"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ListMeta"
                        }
                    ],
                    "description": "+optional"
                }
            },
            "type": "object"
        },
        "v1.RestorePhase": {
            "enum": [
                "New",
                "FailedValidation",
                "InProgress",
                "WaitingForPluginOperations",
                "WaitingForPluginOperationsPartiallyFailed",
                "Completed",
                "PartiallyFailed",
                "Failed"
            ],
            "type": "string",
            "x-enum-varnames": [
                "RestorePhaseNew",
                "RestorePhaseFailedValidation",
                "RestorePhaseInProgress",
                "RestorePhaseWaitingForPluginOperations",
                "RestorePhaseWaitingForPluginOperationsPartiallyFailed",
                "RestorePhaseCompleted",
                "RestorePhasePartiallyFailed",
                "RestorePhaseFailed"
            ]
        },
        "v1.RestoreProgress": {
            "properties": {
                "itemsRestored": {
                    "description": "ItemsRestored is the number of items that have actually been restored so far\n+optional",
                    "type": "integer"
                },
                "totalItems": {
                    "description": "TotalItems is the total number of items to be restored. This number may change\nthroughout the execution of the restore due to plugins that return additional related\nitems to restore\n+optional",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "v1.RestoreResourceHook": {
            "properties": {
                "exec": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ExecRestoreHook"
                        }
                    ],
                    "description": "Exec defines an exec restore hook."
                },
                "init": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.InitRestoreHook"
                        }
                    ],
                    "description": "Init defines an init restore hook."
                }
            },
            "type": "object"
        },
        "v1.RestoreResourceHookSpec": {
            "properties": {
                "excludedNamespaces": {
                    "description": "ExcludedNamespaces specifies the namespaces to which this hook spec does not apply.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedResources": {
                    "description": "ExcludedResources specifies the resources to which this hook spec does not apply.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedNamespaces": {
                    "description": "IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies\nto all namespaces.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedResources": {
                    "description": "IncludedResources specifies the resources to which this hook spec applies. If empty, it applies\nto all resources.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "labelSelector": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.LabelSelector"
                        }
                    ],
                    "description": "LabelSelector, if specified, filters the resources to which this hook spec applies.\n+optional\n+nullable"
                },
                "name": {
                    "description": "Name is the name of this hook.",
                    "type": "string"
                },
                "postHooks": {
                    "description": "PostHooks is a list of RestoreResourceHooks to execute during and after restoring a resource.\n+optional",
                    "items": {
                        "$ref": "#/definitions/v1.RestoreResourceHook"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.RestoreSpec": {
            "properties": {
                "backupName": {
                    "description": "BackupName is the unique name of the Velero backup to restore\nfrom.",
                    "type": "string"
                },
                "excludedNamespaces": {
                    "description": "ExcludedNamespaces contains a list of namespaces that are not\nincluded in the restore.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludedResources": {
                    "description": "ExcludedResources is a slice of resource names that are not\nincluded in the restore.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "existingResourcePolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_vmware-tanzu_velero_pkg_apis_velero_v1.PolicyType"
                        }
                    ],
                    "description": "ExistingResourcePolicy specifies the restore behavior for the Kubernetes resource to be restored\n+optional\n+nullable"
                },
                "hooks": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RestoreHooks"
                        }
                    ],
                    "description": "Hooks represent custom behaviors that should be executed during or post restore.\n+optional"
                },
                "includeClusterResources": {
                    "description": "IncludeClusterResources specifies whether cluster-scoped resources\nshould be included for consideration in the restore. If null, defaults\nto true.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "includedNamespaces": {
                    "description": "IncludedNamespaces is a slice of namespace names to include objects\nfrom. If empty, all namespaces are included.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedResources": {
                    "description": "IncludedResources is a slice of resource names to include\nin the restore. If empty, all resources in the backup are included.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "itemOperationTimeout": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Duration"
                        }
                    ],
                    "description": "ItemOperationTimeout specifies the time used to wait for RestoreItemAction operations\nThe default value is 1 hour.\n+optional"
                },
                "labelSelector": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.LabelSelector"
                        }
                    ],
                    "description": "LabelSelector is a metav1.LabelSelector to filter with\nwhen restoring individual objects from the backup. If empty\nor nil, all objects are included. Optional.\n+optional\n+nullable"
                },
                "namespaceMapping": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "NamespaceMapping is a map of source namespace names\nto target namespace names to restore into. Any source\nnamespaces not included in the map will be restored into\nnamespaces of the same name.\n+optional",
                    "type": "object"
                },
                "orLabelSelectors": {
                    "description": "OrLabelSelectors is list of metav1.LabelSelector to filter with\nwhen restoring individual objects from the backup. If multiple provided\nthey will be joined by the OR operator. LabelSelector as well as\nOrLabelSelectors cannot co-exist in restore request, only one of them\ncan be used\n+optional\n+nullable",
                    "items": {
                        "$ref": "#/definitions/v1.LabelSelector"
                    },
                    "type": "array"
                },
                "preserveNodePorts": {
                    "description": "PreserveNodePorts specifies whether to restore old nodePorts from backup.\n+optional\n+nullable",
                    "type": "boolean"
                },
                "resourceModifier": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.TypedLocalObjectReference"
                        }
                    ],
                    "description": "ResourceModifier specifies the reference to JSON resource patches that should be applied to resources before restoration.\n+optional\n+nullable"
                },
                "restorePVs": {
                    "description": "RestorePVs specifies whether to restore all included\nPVs from snapshot\n+optional\n+nullable",
                    "type": "boolean"
                },
                "restoreStatus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RestoreStatusSpec"
                        }
                    ],
                    "description": "RestoreStatus specifies which resources we should restore the status\nfield. If nil, no objects are included. Optional.\n+optional\n+nullable"
                },
                "scheduleName": {
                    "description": "ScheduleName is the unique name of the Velero schedule to restore\nfrom. If specified, and BackupName is empty, Velero will restore\nfrom the most recent successful backup created from this schedule.\n+optional",
                    "type": "string"
                },
                "uploaderConfig": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.UploaderConfigForRestore"
                        }
                    ],
                    "description": "UploaderConfig specifies the configuration for the restore.\n+optional\n+nullable"
                }
            },
            "type": "object"
        },
        "v1.RestoreStatus": {
            "properties": {
                "completionTimestamp": {
                    "description": "CompletionTimestamp records the time the restore operation was completed.\nCompletion time is recorded even on failed restore.\nThe server's time is used for StartTimestamps\n+optional\n+nullable",
                    "type": "string"
                },
                "errors": {
                    "description": "Errors is a count of all error messages that were generated during\nexecution of the restore. The actual errors are stored in object storage.\n+optional",
                    "type": "integer"
                },
                "failureReason": {
                    "description": "FailureReason is an error that caused the entire restore to fail.\n+optional",
                    "type": "string"
                },
                "hookStatus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.HookStatus"
                        }
                    ],
                    "description": "HookStatus contains information about the status of the hooks.\n+optional\n+nullable"
                },
                "phase": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RestorePhase"
                        }
                    ],
                    "description": "Phase is the current state of the Restore\n+optional"
                },
                "progress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.RestoreProgress"
                        }
                    ],
                    "description": "Progress contains information about the restore's execution progress. Note\nthat this information is best-effort only -- if Velero fails to update it\nduring a restore for any reason, it may be inaccurate/stale.\n+optional\n+nullable"
                },
                "restoreItemOperationsAttempted": {
                    "description": "RestoreItemOperationsAttempted is the total number of attempted\nasync RestoreItemAction operations for this restore.\n+optional",
                    "type": "integer"
                },
                "restoreItemOperationsCompleted": {
                    "description": "RestoreItemOperationsCompleted is the total number of successfully completed\nasync RestoreItemAction operations for this restore.\n+optional",
                    "type": "integer"
                },
                "restoreItemOperationsFailed": {
                    "description": "RestoreItemOperationsFailed is the total number of async\nRestoreItemAction operations for this restore which ended with an error.\n+optional",
                    "type": "integer"
                },
                "startTimestamp": {
                    "description": "StartTimestamp records the time the restore operation was started.\nThe server's time is used for StartTimestamps\n+optional\n+nullable",
                    "type": "string"
                },
                "validationErrors": {
                    "description": "ValidationErrors is a slice of all validation errors (if\napplicable)\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "warnings": {
                    "description": "Warnings is a count of all warning messages that were generated during\nexecution of the restore. The actual warnings are stored in object storage.\n+optional",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "v1.RestoreStatusSpec": {
            "properties": {
                "excludedResources": {
                    "description": "ExcludedResources specifies the resources to which will not restore the status.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includedResources": {
                    "description": "IncludedResources specifies the resources to which will restore the status.\nIf empty, it applies to all resources.\n+optional\n+nullable",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.Schedule": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ],
                    "description": "+optional"
                },
                "spec": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ScheduleSpec"
                        }
                    ],
                    "description": "+optional"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ScheduleStatus"
                        }
                    ],
                    "description": "+optional"
                }
            },
            "type": "object"
        },
        "v1.ScheduleList": {
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/v1.Schedule"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ListMeta"
                        }
                    ],
                    "description": "+optional"
                }
            },
            "type": "object"
        },
        "v1.SchedulePhase": {
            "enum": [
                "New",
                "Enabled",
                "FailedValidation"
            ],
            "type": "string",
            "x-enum-varnames": [
                "SchedulePhaseNew",
                "SchedulePhaseEnabled",
                "SchedulePhaseFailedValidation"
            ]
        },
        "v1.ScheduleSpec": {
            "properties": {
                "paused": {
                    "description": "Paused specifies whether the schedule is paused or not\n+optional",
                    "type": "boolean"
                },
                "schedule": {
                    "description": "Schedule is a Cron expression defining when to run\nthe Backup.",
                    "type": "string"
                },
                "skipImmediately": {
                    "description": "SkipImmediately specifies whether to skip backup if schedule is due immediately from `schedule.status.lastBackup` timestamp when schedule is unpaused or if schedule is new.\nIf true, backup will be skipped immediately when schedule is unpaused if it is due based on .Status.LastBackupTimestamp or schedule is new, and will run at next schedule time.\nIf false, backup will not be skipped immediately when schedule is unpaused, but will run at next schedule time.\nIf empty, will follow server configuration (default: false).\n+optional",
                    "type": "boolean"
                },
                "template": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.BackupSpec"
                        }
                    ],
                    "description": "Template is the definition of the Backup to be run\non the provided schedule"
                },
                "useOwnerReferencesInBackup": {
                    "description": "UseOwnerReferencesBackup specifies whether to use\nOwnerReferences on backups created by this Schedule.\n+optional\n+nullable",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "v1.ScheduleStatus": {
            "properties": {
                "lastBackup": {
                    "description": "LastBackup is the last time a Backup was run for this\nSchedule schedule\n+optional\n+nullable",
                    "type": "string"
                },
                "lastSkipped": {
                    "description": "LastSkipped is the last time a Schedule was skipped\n+optional\n+nullable",
                    "type": "string"
                },
                "phase": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.SchedulePhase"
                        }
                    ],
                    "description": "Phase is the current phase of the Schedule\n+optional"
                },
                "validationErrors": {
                    "description": "ValidationErrors is a slice of all validation errors (if\napplicable)\n+optional",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "v1.SecretKeySelector": {
            "properties": {
                "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional",
                    "type": "string"
                },
                "optional": {
                    "description": "Specify whether the Secret or its key must be defined\n+optional",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "v1.TypedLocalObjectReference": {
            "properties": {
                "apiGroup": {
                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is the type of resource being referenced",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of resource being referenced",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "v1.UploaderConfigForBackup": {
            "properties": {
                "parallelFilesUpload": {
                    "description": "ParallelFilesUpload is the number of files parallel uploads to perform when using the uploader.\n+optional",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "v1.UploaderConfigForRestore": {
            "properties": {
                "writeSparseFiles": {
                    "description": "WriteSparseFiles is a flag to indicate whether write files sparsely or not.\n+optional\n+nullable",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AccountAction": {
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "update": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.Agent": {
            "properties": {
                "backupDir": {
                    "type": "string"
                },
                "dest": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.Dest"
                    },
                    "type": "array"
                },
                "groups": {
                    "description": "resource group",
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "hosts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vpkPath": {
                    "type": "string"
                },
                "vpkVersion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AgentAction": {
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "schedules": {
                    "type": "boolean"
                },
                "tasks": {
                    "type": "boolean"
                },
                "update": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AgentBackup": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "createdTime": {
                    "type": "integer"
                },
                "dev": {
                    "type": "string"
                },
                "diskId": {
                    "type": "integer"
                },
                "diskPath": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AgentBackupCreateOptions": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "retationPeriod": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AgentCreateOptions": {
            "properties": {
                "backupDir": {
                    "type": "string"
                },
                "dest": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.Dest"
                    },
                    "type": "array"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "hosts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vpkPath": {
                    "type": "string"
                },
                "vpkVersion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AgentWithoutToken": {
            "properties": {
                "backupDir": {
                    "type": "string"
                },
                "dest": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.Dest"
                    },
                    "type": "array"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "hosts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vpkPath": {
                    "type": "string"
                },
                "vpkVersion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AuthResponse": {
            "properties": {
                "authenticated": {
                    "type": "boolean"
                },
                "expireAt": {
                    "type": "integer"
                },
                "expirePasswordDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "redirect": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.AuthSettings": {
            "properties": {
                "attempt_window": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "maximum": 1440,
                    "minimum": 0
                },
                "forbidden_substrings": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "front_time_out": {
                    "minimum": 0,
                    "type": "integer"
                },
                "lock_duration": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "maximum": 1440,
                    "minimum": 0
                },
                "max_attempts": {
                    "minimum": 0,
                    "type": "integer"
                },
                "max_inactive_days": {
                    "minimum": 0,
                    "type": "integer"
                },
                "max_password_history": {
                    "minimum": 0,
                    "type": "integer"
                },
                "max_password_validity_period": {
                    "minimum": 1,
                    "type": "integer"
                },
                "max_sessions": {
                    "minimum": 0,
                    "type": "integer"
                },
                "min_password_change_interval": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "maximum": 153722867,
                    "minimum": 0
                },
                "old_username_ban_period": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "maximum": 153722867,
                    "minimum": 0
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.BackupCreateOptions": {
            "properties": {
                "defaultVolumesToFsBackup": {
                    "type": "boolean"
                },
                "excludeNamespaces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludeResources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fromSchedule": {
                    "type": "string"
                },
                "includeClusterResources": {
                    "type": "boolean"
                },
                "includeNamespaces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includeResources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "orderedResources": {
                    "type": "string"
                },
                "selector": {
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "snapshotLocations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "snapshotVolumes": {
                    "type": "boolean"
                },
                "storageLocation": {
                    "type": "string"
                },
                "ttl": {
                    "$ref": "#/definitions/time.Duration"
                },
                "wait": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.BackupStorageCreateOptions": {
            "properties": {
                "accessMode": {
                    "type": "string"
                },
                "backupSyncPeriod": {
                    "$ref": "#/definitions/time.Duration"
                },
                "bucket": {
                    "type": "string"
                },
                "caCertFile": {
                    "type": "string"
                },
                "config": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "credential": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "defaultBackupStorageLocation": {
                    "type": "boolean"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "validationFrequency": {
                    "$ref": "#/definitions/time.Duration"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ChangeClusterRequest": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "oldGroups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ChangePasswordRequest": {
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "confirmPassword",
                "newPassword",
                "oldPassword",
                "username"
            ],
            "type": "object"
        },
        "virtualprotect_internal_models.ChangeStatusRequest": {
            "properties": {
                "action": {
                    "enum": [
                        "activate",
                        "deactivate"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "action"
            ],
            "type": "object"
        },
        "virtualprotect_internal_models.ChangeUserRequest": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "oldGroups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "oldPassword": {
                    "type": "string"
                },
                "oldUsername": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.CloudDiskData": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "diskType": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "presentTo": {},
                "resId": {
                    "type": "string"
                },
                "resName": {
                    "type": "string"
                },
                "sepId": {
                    "type": "integer"
                },
                "sepType": {
                    "type": "string"
                },
                "shareable": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.CloudVMData": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "bootDiskSize": {
                    "type": "integer"
                },
                "platformUrl": {
                    "type": "string"
                },
                "rgId": {
                    "type": "integer"
                },
                "rgName": {
                    "type": "string"
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "techStatus": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.CloudVmDiskData": {
            "properties": {
                "bus_number": {
                    "type": "integer"
                },
                "diskType": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "pool": {
                    "type": "string"
                },
                "presentTo": {},
                "resId": {
                    "type": "string"
                },
                "shareable": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.Cluster": {
            "properties": {
                "config": {
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "incluster": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ClusterAction": {
            "properties": {
                "add": {
                    "type": "boolean"
                },
                "backups": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "restores": {
                    "type": "boolean"
                },
                "schedules": {
                    "type": "boolean"
                },
                "storages": {
                    "type": "boolean"
                },
                "tools": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ClusterAddOptions": {
            "properties": {
                "config": {
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "inlcuster": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.CompactGroup": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.CompactUser": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "description": "Поле для статуса (\"active\", \"deactivated\" и т.д.)",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeAction": {
            "properties": {
                "add": {
                    "type": "boolean"
                },
                "backups": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "restores": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeBackup": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "createdTime": {
                    "type": "integer"
                },
                "dev": {
                    "type": "string"
                },
                "diskId": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeBackupCreateOptions": {
            "properties": {
                "backupPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeBackupMultipleCreateOptions": {
            "properties": {
                "backupPath": {
                    "type": "string"
                },
                "diskId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeBackupMultipleRestoreOptions": {
            "properties": {
                "backupId": {
                    "type": "integer"
                },
                "diskId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeDisk": {
            "properties": {
                "diskId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ComputeRestore": {
            "properties": {
                "computeId": {
                    "type": "integer"
                },
                "diskId": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.CreateUserRequest": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.DeAccount": {
            "properties": {
                "appId": {
                    "type": "string"
                },
                "appSecret": {
                    "type": "string"
                },
                "decortUrl": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "groups": {
                    "description": "resource group",
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "description": "BVS",
                    "type": "string"
                },
                "vcontrolUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.DeAccountAddOptions": {
            "properties": {
                "appId": {
                    "type": "string"
                },
                "appSecret": {
                    "type": "string"
                },
                "decortUrl": {
                    "type": "string"
                },
                "groups": {
                    "description": "resource group",
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "ssoUrl": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "description": "BVS",
                    "type": "string"
                },
                "vcontrolUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.Dest": {
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "pool": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sep": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.DiskDetail": {
            "properties": {
                "cloudDiskData": {
                    "$ref": "#/definitions/virtualprotect_internal_models.CloudDiskData"
                },
                "diskName": {
                    "type": "string"
                },
                "diskType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "vmid": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.DiskDetailList": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.DiskDetail"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.DocsActions": {
            "properties": {
                "read": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ErrorResponse": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.Group": {
            "properties": {
                "actions": {
                    "$ref": "#/definitions/virtualprotect_internal_models.GroupActions"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.GroupAction": {
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "update": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.GroupActions": {
            "properties": {
                "account": {
                    "$ref": "#/definitions/virtualprotect_internal_models.AccountAction"
                },
                "agent": {
                    "$ref": "#/definitions/virtualprotect_internal_models.AgentAction"
                },
                "cluster": {
                    "$ref": "#/definitions/virtualprotect_internal_models.ClusterAction"
                },
                "compute": {
                    "$ref": "#/definitions/virtualprotect_internal_models.ComputeAction"
                },
                "docs": {
                    "$ref": "#/definitions/virtualprotect_internal_models.DocsActions"
                },
                "group": {
                    "$ref": "#/definitions/virtualprotect_internal_models.GroupAction"
                },
                "home": {
                    "$ref": "#/definitions/virtualprotect_internal_models.HomeActions"
                },
                "user": {
                    "$ref": "#/definitions/virtualprotect_internal_models.UserAction"
                },
                "vm": {
                    "$ref": "#/definitions/virtualprotect_internal_models.VMAction"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.GroupCreateOptions": {
            "properties": {
                "actions": {
                    "$ref": "#/definitions/virtualprotect_internal_models.GroupActions"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.GroupUpdateOptions": {
            "properties": {
                "actions": {
                    "$ref": "#/definitions/virtualprotect_internal_models.GroupActions"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.GroupUsers": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "users": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactUser"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.HomeActions": {
            "properties": {
                "read": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ImageItem": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "architecture": {
                    "type": "string"
                },
                "bootType": {
                    "type": "string"
                },
                "bootable": {
                    "type": "boolean"
                },
                "cdrom": {
                    "type": "boolean"
                },
                "desc": {
                    "type": "string"
                },
                "drivers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hotResize": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "linkTo": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networkInterfaceNaming": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "sepId": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ImageItemsData": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.ImageItem"
                    },
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.InfoAgent": {
            "properties": {
                "backupDir": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "dest": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.Dest"
                    },
                    "type": "array"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.CompactGroup"
                    },
                    "type": "array"
                },
                "hosts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vpkPath": {
                    "type": "string"
                },
                "vpkVersion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ItemACL": {
            "properties": {
                "explicit": {
                    "type": "boolean"
                },
                "guid": {
                    "type": "string"
                },
                "right": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userGroupId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ListNodesData": {
            "properties": {
                "data": {
                    "description": "Data"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ListSEP": {
            "properties": {
                "data": {
                    "description": "Data",
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.SEPRecord"
                    },
                    "type": "array"
                },
                "entryCount": {
                    "description": "Entry count",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ListTypes": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {},
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.LoginRequest": {
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.LogoutRequest": {
            "properties": {
                "token": {
                    "description": "JWT-токен, можно передавать как альтернативу заголовку",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.NewCloudDiskData": {
            "properties": {
                "diskType": {
                    "type": "string"
                },
                "imageId": {
                    "type": "integer"
                },
                "pool": {
                    "type": "string"
                },
                "sepId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.NewCloudVMData": {
            "properties": {
                "driver": {
                    "type": "string"
                },
                "netId": {
                    "type": "integer"
                },
                "netType": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "rgId": {
                    "type": "integer"
                },
                "sepId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.NewDiskDetail": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "cloudDiskData": {
                    "$ref": "#/definitions/virtualprotect_internal_models.NewCloudDiskData"
                },
                "diskName": {
                    "type": "string"
                },
                "diskSize": {
                    "type": "integer"
                },
                "vmType": {
                    "type": "string"
                },
                "vmid": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.NewVMBlankData": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "bootdiskSize": {
                    "type": "integer"
                },
                "cloudVMData": {
                    "$ref": "#/definitions/virtualprotect_internal_models.NewCloudVMData"
                },
                "cpu": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ram": {
                    "type": "integer"
                },
                "start": {
                    "type": "boolean"
                },
                "vmType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.NewVMData": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "bootdiskSize": {
                    "type": "integer"
                },
                "cloudVMData": {
                    "$ref": "#/definitions/virtualprotect_internal_models.NewCloudVMData"
                },
                "cpu": {
                    "type": "integer"
                },
                "imageId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ram": {
                    "type": "integer"
                },
                "start": {
                    "type": "boolean"
                },
                "vmType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.OpenIDConfigurations": {
            "properties": {
                "authURL": {
                    "type": "string"
                },
                "clientID": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "deviceAuthURL": {
                    "type": "string"
                },
                "issuerURL": {
                    "type": "string"
                },
                "jwksURL": {
                    "type": "string"
                },
                "redirectURL": {
                    "type": "string"
                },
                "tokenURL": {
                    "type": "string"
                },
                "userInfoURL": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.Repository": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.RepositoryCreateOptions": {
            "properties": {
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ResourceGroupItem": {
            "properties": {
                "accountAcl": {
                    "$ref": "#/definitions/virtualprotect_internal_models.ItemACL"
                },
                "accountId": {
                    "type": "integer"
                },
                "accountName": {
                    "type": "string"
                },
                "acl": {},
                "computeFeatures": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cpu_allocation_parameter": {
                    "type": "string"
                },
                "cpu_allocation_ratio": {
                    "type": "number"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "def_net_id": {
                    "type": "integer"
                },
                "def_net_type": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "string"
                },
                "deletedTime": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "dirty": {
                    "type": "boolean"
                },
                "gid": {
                    "type": "integer"
                },
                "guid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lockStatus": {
                    "type": "string"
                },
                "milestones": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "registerComputes": {
                    "type": "boolean"
                },
                "resourceLimits": {
                    "$ref": "#/definitions/virtualprotect_internal_models.ResourceLimits"
                },
                "resourceTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "secret": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uniqPools": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedTime": {
                    "type": "integer"
                },
                "vins": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "vms": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ResourceGroupItemData": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.ResourceGroupItem"
                    },
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ResourceLimits": {
            "properties": {
                "CU_C": {
                    "type": "number"
                },
                "CU_D": {
                    "type": "number"
                },
                "CU_DM": {
                    "type": "number"
                },
                "CU_I": {
                    "type": "number"
                },
                "CU_M": {
                    "type": "number"
                },
                "CU_NP": {
                    "type": "number"
                },
                "gpu_units": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.RestoreCreateOptions": {
            "properties": {
                "allowPartiallyFailed": {
                    "type": "boolean"
                },
                "backupName": {
                    "type": "string"
                },
                "excludeNamespaces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "excludeResources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "existingResourcePolicy": {
                    "type": "string"
                },
                "includeClusterResources": {
                    "type": "boolean"
                },
                "includeNamespaces": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includeResources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "namespaceMappings": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "preserveNodePorts": {
                    "type": "boolean"
                },
                "restoreName": {
                    "type": "string"
                },
                "restoreVolumes": {
                    "type": "boolean"
                },
                "scheduleName": {
                    "type": "string"
                },
                "selector": {
                    "$ref": "#/definitions/v1.LabelSelector"
                },
                "statusExcludeResources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "statusIncludeResources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "wait": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.SEPConfig": {
            "additionalProperties": true,
            "type": "object"
        },
        "virtualprotect_internal_models.SEPRecord": {
            "properties": {
                "_ckey": {
                    "type": "string"
                },
                "_meta": {
                    "items": {},
                    "type": "array"
                },
                "config": {
                    "$ref": "#/definitions/virtualprotect_internal_models.SEPConfig"
                },
                "consumedBy": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "desc": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "guid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "milestones": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "objStatus": {
                    "type": "string"
                },
                "providedBy": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "sharedWith": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "techStatus": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ScheduleAgent": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "computeId": {
                    "type": "integer"
                },
                "createdTime": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "retationPeriod": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ScheduleAgentCreateOptions": {
            "properties": {
                "day": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ScheduleAgentUpdateOptions": {
            "properties": {
                "day": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ScheduleCreateOptions": {
            "properties": {
                "backupOptions": {
                    "$ref": "#/definitions/virtualprotect_internal_models.BackupCreateOptions"
                },
                "dates": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.ScheduleDates"
                    },
                    "type": "array"
                },
                "schedule": {
                    "type": "string"
                },
                "useOwnerReferencesInBackup": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.ScheduleDates": {
            "properties": {
                "day": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "retentionPeriod": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.SuccessResponse": {
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.TagAddRequest": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "vmId": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "value",
                "vmId"
            ],
            "type": "object"
        },
        "virtualprotect_internal_models.TagRemoveRequest": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "vmId": {
                    "type": "integer"
                }
            },
            "required": [
                "key",
                "vmId"
            ],
            "type": "object"
        },
        "virtualprotect_internal_models.User": {
            "properties": {
                "forcePasswordChange": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastPasswordChange": {
                    "description": "Время последнего изменения пароля",
                    "type": "string"
                },
                "passwordHistory": {
                    "description": "История предыдущих паролей",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Поле для статуса (\"active\", \"deactivated\" и т.д.)",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.UserAction": {
            "properties": {
                "activate_deactivate": {
                    "type": "boolean"
                },
                "change_pwd_request": {
                    "type": "boolean"
                },
                "create": {
                    "type": "boolean"
                },
                "delete": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "update": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.UserGroup": {
            "properties": {
                "actions": {
                    "$ref": "#/definitions/virtualprotect_internal_models.GroupActions"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VMAction": {
            "properties": {
                "a_read": {
                    "type": "boolean"
                },
                "a_write": {
                    "type": "boolean"
                },
                "add": {
                    "type": "boolean"
                },
                "backups": {
                    "type": "boolean"
                },
                "read": {
                    "type": "boolean"
                },
                "restores": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VMData": {
            "properties": {
                "cloudVMData": {
                    "$ref": "#/definitions/virtualprotect_internal_models.CloudVMData"
                },
                "cpu": {
                    "type": "integer"
                },
                "disks": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.VmDiskDetail"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "interfaces": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.VmInterface"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "ram": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "vmType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VMDataList": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {},
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VeleroInstallOpts": {
            "properties": {
                "resticTimeout": {
                    "type": "integer"
                },
                "useCSI": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VinsItem": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "accountName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "deletedBy": {
                    "type": "string"
                },
                "deletedTime": {
                    "type": "integer"
                },
                "externalIP": {
                    "type": "string"
                },
                "extnetId": {
                    "type": "integer"
                },
                "freeIPs": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "rgId": {
                    "type": "integer"
                },
                "rgName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedTime": {
                    "type": "integer"
                },
                "vxlanId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VinsItemsData": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models.VinsItem"
                    },
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VmDiskDetail": {
            "properties": {
                "cloudVmDiskData": {
                    "$ref": "#/definitions/virtualprotect_internal_models.CloudVmDiskData"
                },
                "diskType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "vmid": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models.VmInterface": {
            "properties": {
                "gateway": {
                    "type": "string"
                },
                "ipAddr": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "netId": {
                    "type": "integer"
                },
                "netType": {
                    "type": "string"
                },
                "netmask": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.BackupFileForIncremental": {
            "properties": {
                "backupFileIncr": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.ComputeWithDisks": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "disks": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.DiskInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.Date": {
            "properties": {
                "day": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.Dest": {
            "properties": {
                "pool": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sep": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.DiskInfo": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "pool": {
                    "type": "string"
                },
                "resId": {
                    "type": "string"
                },
                "sepId": {
                    "type": "integer"
                },
                "sepType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.MessageAgent": {
            "properties": {
                "agentId": {
                    "type": "integer"
                },
                "date": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.ScheduleAgent": {
            "properties": {
                "agentId": {
                    "type": "integer"
                },
                "dates": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleDate"
                },
                "dest": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.Dest"
                },
                "elems": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ComputeWithDisks"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "typeIncremental": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.ScheduleDate": {
            "properties": {
                "full": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.Date"
                    },
                    "type": "array"
                },
                "incremental": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.Date"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.VPLog": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "log": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_dbtypes.VPPaginatedLog": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "logs": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.VPLog"
                    },
                    "type": "array"
                },
                "page": {
                    "type": "integer"
                },
                "total_logs": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.AgentScheduleFrontendCreateOptions": {
            "properties": {
                "agentId": {
                    "type": "integer"
                },
                "dates": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleDate"
                },
                "destInfo": {
                    "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.Dest"
                },
                "elems": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.CompactComputeWithDisksCreateOptions"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "typeIncremental": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.AgentScheduleFrontendUpdateOptions": {
            "properties": {
                "agentId": {
                    "type": "integer"
                },
                "dates": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleDate"
                },
                "destInfo": {
                    "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.Dest"
                },
                "elems": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.CompactComputeWithDisksCreateOptions"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "typeIncremental": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.BackupAgentFromSchedule": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "backupType": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "diskId": {
                    "type": "integer"
                },
                "diskPath": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.BackupAgentFromTask": {
            "properties": {
                "backupFile": {
                    "description": "AccountId  uint64 `json:\"accountId\" bson:\"accountId\"`",
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "computeId": {
                    "description": "BackupType string `json:\"backupType\" bson:\"backupType\"`",
                    "type": "integer"
                },
                "diskId": {
                    "type": "integer"
                },
                "diskPath": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.BackupComputeAgentCreateOptions": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "destInfo": {
                    "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.Dest"
                },
                "disks": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.BackupComputeAgentRestoreOptions": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupId": {
                    "type": "integer"
                },
                "backupPath": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "diskId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.CompactComputeWithDisksCreateOptions": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "computeId": {
                    "type": "integer"
                },
                "disks": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.ComputeCreateOptions": {
            "properties": {
                "bootDisk": {
                    "type": "integer"
                },
                "cpu": {
                    "type": "integer"
                },
                "imageId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "ram": {
                    "type": "integer"
                },
                "rgId": {
                    "type": "integer"
                },
                "sepId": {
                    "type": "integer"
                },
                "start": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.ComputeWithDisks": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "computeId": {
                    "type": "integer"
                },
                "disks": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.DeleteBackupAgentFromRetentionPeriod": {
            "properties": {
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.DeleteBackupAgentFromTask": {
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.Dest": {
            "properties": {
                "pool": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sep": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.DisksAddOptions": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "sepId": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.MessageAgent": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_reqtypes.RestoreBackupAgentFromTask": {
            "properties": {
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "diskId": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.BackupComputeAgent": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "backupType": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "diskId": {
                    "type": "integer"
                },
                "diskName": {
                    "type": "string"
                },
                "diskPath": {
                    "type": "string"
                },
                "diskSize": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "expiredTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scheduleId": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.BackupComputeAgentCompletedTask": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupId": {
                    "type": "integer"
                },
                "backupName": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "backupType": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "disk": {
                    "$ref": "#/definitions/virtualprotect_internal_models_restypes.DiskInfo"
                },
                "endTime": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.BackupComputeAgentCreateTask": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupId": {
                    "description": "Fill from agent",
                    "type": "integer"
                },
                "backupName": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "backupType": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "disk": {
                    "$ref": "#/definitions/virtualprotect_internal_models_restypes.DiskInfo"
                },
                "endTime": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.BackupComputeAgentDeleteTask": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupId": {
                    "type": "integer"
                },
                "backupName": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "backupType": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "disk": {
                    "$ref": "#/definitions/virtualprotect_internal_models_restypes.DiskInfo"
                },
                "endTime": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.BackupComputeAgentRestoreTask": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "agentId": {
                    "type": "integer"
                },
                "backupAccountId": {
                    "type": "integer"
                },
                "backupComputeId": {
                    "type": "integer"
                },
                "backupDiskId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupId": {
                    "type": "integer"
                },
                "backupName": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "backupType": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "integer"
                },
                "disk": {
                    "$ref": "#/definitions/virtualprotect_internal_models_restypes.DiskInfo"
                },
                "endTime": {
                    "type": "integer"
                },
                "errorCode": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.DiskInfo": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.DiskInfoCompute": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.ItemCompute": {
            "properties": {
                "accountId": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "accountName": {
                    "description": "Account name",
                    "type": "string"
                },
                "acl": {
                    "description": "Access Control List",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemACL"
                    },
                    "type": "array"
                },
                "affinityLabel": {
                    "description": "Affinity label",
                    "type": "string"
                },
                "affinityRules": {
                    "description": "List affinity rules",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemRule"
                    },
                    "type": "array"
                },
                "affinityWeight": {
                    "description": "Affinity weight",
                    "type": "integer"
                },
                "antiAffinityRules": {
                    "description": "List anti affinity rules",
                    "items": {
                        "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.ItemRule"
                    },
                    "type": "array"
                },
                "arch": {
                    "description": "Architecture",
                    "type": "string"
                },
                "autoStart": {
                    "description": "Auto start when node restarted",
                    "type": "boolean"
                },
                "bootOrder": {
                    "description": "Boot order",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "bootType": {
                    "description": "Boot type",
                    "type": "string"
                },
                "bootdiskSize": {
                    "description": "Boot disk size",
                    "type": "integer"
                },
                "cdImageId": {
                    "description": "CD Image Id",
                    "type": "integer"
                },
                "chipset": {
                    "description": "Chipset",
                    "type": "string"
                },
                "cloneReference": {
                    "description": "Clone reference",
                    "type": "integer"
                },
                "clones": {
                    "description": "List clone IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "computeciId": {
                    "description": "Compute CI ID",
                    "type": "integer"
                },
                "cpupin": {
                    "description": "CPU Pin",
                    "type": "boolean"
                },
                "cpus": {
                    "description": "Number of cores",
                    "type": "integer"
                },
                "createdBy": {
                    "description": "Created by",
                    "type": "string"
                },
                "createdTime": {
                    "description": "Created time",
                    "type": "integer"
                },
                "customFields": {
                    "additionalProperties": true,
                    "description": "Custom fields list",
                    "type": "object"
                },
                "deletedBy": {
                    "description": "Deleted by",
                    "type": "string"
                },
                "deletedTime": {
                    "description": "Deleted time",
                    "type": "integer"
                },
                "desc": {
                    "description": "Description",
                    "type": "string"
                },
                "devices": {
                    "description": "Devices"
                },
                "disks": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_restypes.DiskInfoCompute"
                    },
                    "type": "array"
                },
                "driver": {
                    "description": "Driver",
                    "type": "string"
                },
                "gid": {
                    "description": "Grid ID",
                    "type": "integer"
                },
                "guid": {
                    "description": "GUID",
                    "type": "integer"
                },
                "hotResize": {
                    "description": "Hot resize",
                    "type": "boolean"
                },
                "hpBacked": {
                    "description": "HPBacked",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "imageId": {
                    "description": "Image ID",
                    "type": "integer"
                },
                "interfaces": {
                    "description": "List interfaces",
                    "items": {
                        "$ref": "#/definitions/compute.ItemVNFInterface"
                    },
                    "type": "array"
                },
                "loaderType": {
                    "description": "Loader type",
                    "type": "string"
                },
                "lockStatus": {
                    "description": "Lock status",
                    "type": "string"
                },
                "managerId": {
                    "description": "Manager ID",
                    "type": "integer"
                },
                "managerType": {
                    "description": "Manager type",
                    "type": "string"
                },
                "migrationjob": {
                    "description": "Migration job",
                    "type": "integer"
                },
                "milestones": {
                    "description": "Milestones",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "needReboot": {
                    "description": "NeedReboot",
                    "type": "boolean"
                },
                "networkInterfaceNaming": {
                    "description": "network interface naming",
                    "type": "string"
                },
                "numaAffinity": {
                    "description": "Numa Affinity",
                    "type": "string"
                },
                "numaNodeId": {
                    "description": "NumaNodeId",
                    "type": "integer"
                },
                "pinnedToStack": {
                    "description": "Pinned to stack",
                    "type": "boolean"
                },
                "preferredCpu": {
                    "description": "PreferredCPU",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "ram": {
                    "description": "Number of RAM",
                    "type": "integer"
                },
                "referenceId": {
                    "description": "Reference ID",
                    "type": "string"
                },
                "registered": {
                    "description": "Registered",
                    "type": "boolean"
                },
                "resName": {
                    "description": "Resource name",
                    "type": "string"
                },
                "reservedNodeCpus": {
                    "description": "Reserved Node Cpus",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "rgId": {
                    "description": "Resource group ID",
                    "type": "integer"
                },
                "rgName": {
                    "description": "Resource group name",
                    "type": "string"
                },
                "snapSets": {
                    "description": "List snapsets",
                    "items": {
                        "$ref": "#/definitions/compute.ItemSnapSet"
                    },
                    "type": "array"
                },
                "statelessSepId": {
                    "description": "Stateless SepID",
                    "type": "integer"
                },
                "statelessSepType": {
                    "description": "Stateless SepType",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags",
                    "type": "object"
                },
                "techStatus": {
                    "description": "Tech status",
                    "type": "string"
                },
                "totalDisksSize": {
                    "description": "Total disk size",
                    "type": "integer"
                },
                "updatedBy": {
                    "description": "Updated by",
                    "type": "string"
                },
                "updatedTime": {
                    "description": "Updated time",
                    "type": "integer"
                },
                "userManaged": {
                    "description": "User Managed or not",
                    "type": "boolean"
                },
                "vgpus": {
                    "description": "List vGPU IDs",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "vinsConnected": {
                    "description": "VINS connected",
                    "type": "integer"
                },
                "virtualImageId": {
                    "description": "Virtual image ID",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.TaskCreateBackupAgent": {
            "properties": {
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "dest": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.Dest"
                },
                "disk": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.DiskInfo"
                },
                "id": {
                    "type": "integer"
                },
                "retentionPeriod": {
                    "description": "In Days",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.TaskId": {
            "properties": {
                "taskId": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_models_restypes.TaskRestoreBackupAgent": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "backupFile": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "computeId": {
                    "type": "integer"
                },
                "computeName": {
                    "type": "string"
                },
                "disk": {
                    "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.DiskInfo"
                },
                "id": {
                    "type": "integer"
                },
                "incrementalBackupFiles": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.BackupFileForIncremental"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "virtualprotect_internal_services_decort.ListComputeFullResponse": {
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/virtualprotect_internal_models_restypes.ItemCompute"
                    },
                    "type": "array"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            },
            "type": "object"
        }
    },
    "host": "10.228.20.40",
    "info": {
        "contact": {
            "email": "support@swagger.io",
            "name": "API Support",
            "url": "http://www.swagger.io/support"
        },
        "description": "API documentation",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Virtual Protect as a Service API",
        "version": "1.9.5"
    },
    "paths": {
        "/accounts/dynamix/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List DE-accounts configs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.DeAccount"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List DE-accounts",
                "tags": [
                    "accounts"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Add new DE-account config",
                "parameters": [
                    {
                        "description": "Account info",
                        "in": "body",
                        "name": "deaccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.DeAccountAddOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.DeAccount"
                        }
                    }
                },
                "summary": "Add DE-account",
                "tags": [
                    "accounts"
                ]
            }
        },
        "/accounts/dynamix/{accountId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete account config by ID",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete account",
                "tags": [
                    "accounts"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get account config by ID",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.DeAccount"
                        }
                    }
                },
                "summary": "Get account config",
                "tags": [
                    "accounts"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update account info",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Account info",
                        "in": "body",
                        "name": "deaccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.DeAccountAddOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Update account info",
                "tags": [
                    "accounts"
                ]
            }
        },
        "/agent/{agentId}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Agent Info (agent)",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.InfoAgent"
                        }
                    }
                },
                "summary": "Get Agent info (Agent)",
                "tags": [
                    "agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/message/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get List messages from Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.MessageAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get List messages from Agent",
                "tags": [
                    "message_agent (agent)"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Add message from agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Message from Agent",
                        "in": "body",
                        "name": "MessageInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.MessageAgent"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.MessageAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Add  message  from  agent",
                "tags": [
                    "message_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/message/{messageId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete message by id from Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Message ID",
                        "in": "path",
                        "name": "messageId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete message by id from Agent",
                "tags": [
                    "message_agent (agent)"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get message by id from Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Message ID",
                        "in": "path",
                        "name": "messageId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.MessageAgent"
                        }
                    }
                },
                "summary": "Get message by id from Agent",
                "tags": [
                    "message_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/schedules/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Schedules for agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get Schedules for agent",
                "tags": [
                    "schedules_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/schedules/{scheduleId}/backups/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Return backups from schedule agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup Info",
                        "in": "body",
                        "name": "backupInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.BackupAgentFromSchedule"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Return backups from schedule agent",
                "tags": [
                    "schedules_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/tasks/backups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Tasks for Create Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.TaskCreateBackupAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get Tasks for Create Backup Compute Agent",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/tasks/backups/delete/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Agent return Info about delete Backup from Retention Period Backup Compute",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup Info",
                        "in": "body",
                        "name": "deleteInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.DeleteBackupAgentFromRetentionPeriod"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Agent return Info about delete Backup from Retention Period Backup Compute",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Tasks for Delete Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.TaskRestoreBackupAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get Tasks for Delete Backup Compute Agent",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/tasks/restores/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Tasks for Restore Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.TaskRestoreBackupAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get Tasks for Restore Backup Compute Agent",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/tasks/{taskId}/backup/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Agent return Info about delete Backup from task Delete Backup Compute",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Task ID",
                        "in": "path",
                        "name": "taskId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup Info",
                        "in": "body",
                        "name": "deleteInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.DeleteBackupAgentFromTask"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Agent return Info about delete Backup from task Delete Backup Compute",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Agent return Backup from task Create Backup Compute",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Task ID",
                        "in": "path",
                        "name": "taskId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup Info",
                        "in": "body",
                        "name": "backupInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.BackupAgentFromTask"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Agent return Backup from task Create Backup Compute",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            }
        },
        "/agent/{agentId}/tasks/{taskId}/restore/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Agent return Info about restore Backup from Task",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Task ID",
                        "in": "path",
                        "name": "taskId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Restore Info",
                        "in": "body",
                        "name": "ResotreInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.RestoreBackupAgentFromTask"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Agent return Info about restore Backup from Task",
                "tags": [
                    "tasks_compute_agent (agent)"
                ]
            }
        },
        "/agents/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get  list Agents info",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.AgentWithoutToken"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get List Agents",
                "tags": [
                    "agent_vp"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create new Agent",
                "parameters": [
                    {
                        "description": "Agent info",
                        "in": "body",
                        "name": "agent",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AgentCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.Agent"
                        }
                    }
                },
                "summary": "Create Agent for compute backups in hypervisor",
                "tags": [
                    "agent_vp"
                ]
            }
        },
        "/agents/{agentId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete Agent",
                "tags": [
                    "agent_vp"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Agent info",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.Agent"
                        }
                    }
                },
                "summary": "Get agent info",
                "tags": [
                    "agent_vp"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Update Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent info",
                        "in": "body",
                        "name": "agent",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AgentCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Update Agent",
                "tags": [
                    "agent_vp"
                ]
            }
        },
        "/agents/{agentId}/backups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Backups Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Sets the limit of items per page",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Determines page number, starts at 1",
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers_backupcontroller.ListBackupComputeAgentsResponse"
                        }
                    }
                },
                "summary": "List Backups Compute Agent",
                "tags": [
                    "backups_compute_agent"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create Task for Create Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup Compute Agent Info",
                        "in": "body",
                        "name": "BackupComputeAgent",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.BackupComputeAgentCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.TaskId"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Create Task for Create Backup Compute Agent",
                "tags": [
                    "backups_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/backups/{backupId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create Task for Delete Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_restypes.TaskId"
                        }
                    }
                },
                "summary": "Create Task for Delete Backup Compute Agent",
                "tags": [
                    "backups_compute_agent"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_restypes.BackupComputeAgent"
                        }
                    }
                },
                "summary": "Get Backup Compute Agent",
                "tags": [
                    "backups_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/backups/{backupId}/restore/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create Task for Restore Backup Compute Agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Restore Info",
                        "in": "body",
                        "name": "RestoreInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.BackupComputeAgentRestoreOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_restypes.TaskId"
                        }
                    }
                },
                "summary": "Create Task for Restore Backup Compute Agent",
                "tags": [
                    "backups_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/schedules/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List agent schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List agent schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create agent schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent schedule Info",
                        "in": "body",
                        "name": "agentSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.AgentScheduleFrontendCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleAgent"
                        }
                    }
                },
                "summary": "Create agent schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/schedules/{scheduleId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete agent schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete agent schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get agent schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.ScheduleAgent"
                        }
                    }
                },
                "summary": "Get agent schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Update agent schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule Info",
                        "in": "body",
                        "name": "scheduleInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.AgentScheduleFrontendUpdateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Update agent schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/schedules/{scheduleId}/compute/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete Disks compute from schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disks",
                        "in": "body",
                        "name": "disks",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.ComputeWithDisks"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete Disks compute from schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Add Disks from compute in schedule",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disks",
                        "in": "body",
                        "name": "disks",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.ComputeWithDisks"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Add Disks from compute in schedule",
                "tags": [
                    "schedules_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/tasks/all/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get a list of All tasks for the agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/bson.M"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get a list of All tasks for the agent",
                "tags": [
                    "tasks_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/tasks/backups/create/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get a list of tasks for the agent to create backups",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.BackupComputeAgentCreateTask"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get a list of tasks for the agent to create backups",
                "tags": [
                    "tasks_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/tasks/backups/delete/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get a list of tasks for the agent to delete backups",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.BackupComputeAgentDeleteTask"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get a list of tasks for the agent to delete backups",
                "tags": [
                    "tasks_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/tasks/backups/restore/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get a list of tasks for the agent to restore backups",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.BackupComputeAgentRestoreTask"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get a list of tasks for the agent to restore backups",
                "tags": [
                    "tasks_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/tasks/done/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get a list of Completed tasks for the agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_restypes.BackupComputeAgentCompletedTask"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get a list of Completed tasks for the agent",
                "tags": [
                    "tasks_compute_agent"
                ]
            }
        },
        "/agents/{agentId}/tasks/{taskId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get a list of All tasks for the agent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Task ID",
                        "in": "path",
                        "name": "taskId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete task by id",
                "tags": [
                    "tasks_compute_agent"
                ]
            }
        },
        "/auth/settings": {
            "get": {
                "description": "Retrieves the current authentication settings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AuthSettings"
                        }
                    },
                    "403": {
                        "description": "message: not possible do operation for non admin user",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Get authentication settings",
                "tags": [
                    "auth"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Updates authentication settings and applies them immediately",
                "parameters": [
                    {
                        "description": "New authentication settings",
                        "in": "body",
                        "name": "settings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AuthSettings"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Auth settings updated successfully",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "message: not possible do operation for non admin user",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Update authentication settings",
                "tags": [
                    "auth"
                ]
            }
        },
        "/clusters/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List cluster configs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.Cluster"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List clusters",
                "tags": [
                    "clusters"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create new cluster config",
                "parameters": [
                    {
                        "description": "Backup info",
                        "in": "body",
                        "name": "cluster",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ClusterAddOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.Cluster"
                        }
                    }
                },
                "summary": "Create cluster",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{clusterId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete cluster config by ID",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete cluster",
                "tags": [
                    "clusters"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get cluster config by ID",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.Cluster"
                        }
                    }
                },
                "summary": "Get cluster config",
                "tags": [
                    "clusters"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Change access groups",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Auth param",
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ChangeClusterRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Change cluster access groups",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{clusterId}/backups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List Backups in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.BackupList"
                        }
                    }
                },
                "summary": "List backups",
                "tags": [
                    "cluster_backups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create Backup in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup info",
                        "in": "body",
                        "name": "backup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.BackupCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create backup",
                "tags": [
                    "cluster_backups"
                ]
            }
        },
        "/clusters/{clusterId}/backups/{backupName}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete Backup by backup name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Name of Backup",
                        "in": "path",
                        "name": "backupName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete backup",
                "tags": [
                    "cluster_backups"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get Backup by backup name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Name of Backup",
                        "in": "path",
                        "name": "backupName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Backup"
                        }
                    }
                },
                "summary": "Get backup",
                "tags": [
                    "cluster_backups"
                ]
            }
        },
        "/clusters/{clusterId}/backups/{backupName}/logs/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get Backup logs by backup name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Name of Backup",
                        "in": "path",
                        "name": "backupName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "summary": "Get backup logs",
                "tags": [
                    "cluster_backups"
                ]
            }
        },
        "/clusters/{clusterId}/namespaces/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List Namespace in cluster",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List namespaces",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{clusterId}/resources/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List Resources in cluster",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List resources",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{clusterId}/restores/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List Restores in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.RestoreList"
                        }
                    }
                },
                "summary": "List restores",
                "tags": [
                    "restores"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create Restore in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Restore info",
                        "in": "body",
                        "name": "restore",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.RestoreCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create restore",
                "tags": [
                    "restores"
                ]
            }
        },
        "/clusters/{clusterId}/restores/{restoreName}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete Restore by name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Restore Name",
                        "in": "path",
                        "name": "restoreName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete restore",
                "tags": [
                    "restores"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get Restore by name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Restore Name",
                        "in": "path",
                        "name": "restoreName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Restore"
                        }
                    }
                },
                "summary": "Get restore",
                "tags": [
                    "restores"
                ]
            }
        },
        "/clusters/{clusterId}/restores/{restoreName}/logs/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get Restore logs by restore name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Name of Restore",
                        "in": "path",
                        "name": "restoreName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "summary": "Get restore logs",
                "tags": [
                    "restores"
                ]
            }
        },
        "/clusters/{clusterId}/schedules/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List Schedules in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.ScheduleList"
                        }
                    }
                },
                "summary": "List schedules",
                "tags": [
                    "schedules"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create Schedule in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule info",
                        "in": "body",
                        "name": "schedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ScheduleCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create schedule",
                "tags": [
                    "schedules"
                ]
            }
        },
        "/clusters/{clusterId}/schedules/{scheduleName}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete Schedule by name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule Name",
                        "in": "path",
                        "name": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete schedule",
                "tags": [
                    "schedules"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get Schedule by name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule Name",
                        "in": "path",
                        "name": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Schedule"
                        }
                    }
                },
                "summary": "Get schedule",
                "tags": [
                    "schedules"
                ]
            }
        },
        "/clusters/{clusterId}/storages/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List Backup Locations in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.BackupStorageLocationList"
                        }
                    }
                },
                "summary": "List backup locations",
                "tags": [
                    "storages"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create Backup Storage in velero namespace",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "BackupStorage info",
                        "in": "body",
                        "name": "storage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.BackupStorageCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create backup storage",
                "tags": [
                    "storages"
                ]
            }
        },
        "/clusters/{clusterId}/storages/{storageName}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete Backup Storage by name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Name of Backup Storage",
                        "in": "path",
                        "name": "storageName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete backup storage",
                "tags": [
                    "storages"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get Backup Storage by name",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Name of Backup Storage",
                        "in": "path",
                        "name": "storageName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.BackupStorageLocation"
                        }
                    }
                },
                "summary": "Get backup storage",
                "tags": [
                    "storages"
                ]
            }
        },
        "/clusters/{clusterId}/tools/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Uninstall tools for backups in cluster",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Uninstall tools for backups in cluster",
                "tags": [
                    "tools"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Tools status",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Tools status",
                "tags": [
                    "tools"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Install tools for backups in cluster",
                "parameters": [
                    {
                        "description": "Cluster ID",
                        "in": "path",
                        "name": "clusterId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Install options",
                        "in": "body",
                        "name": "options",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.VeleroInstallOpts"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Install tools for backups in cluster",
                "tags": [
                    "tools"
                ]
            }
        },
        "/dashboard": {
            "get": {
                "description": "Get entity counts for Dashboard",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DashboardResponse"
                        }
                    }
                },
                "summary": "Get entity counts",
                "tags": [
                    "dashboard"
                ]
            }
        },
        "/dynamix/{accountId}/backups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get compute backup list",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Sets the limit of items per page",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Determines page number, starts at 1",
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListComputeBackupsResponse"
                        }
                    }
                },
                "summary": "Get compute backup list",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/backups/{backupId}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get compute backup",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackup"
                        }
                    }
                },
                "summary": "Get compute backup info",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Compute from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "full",
                        "type": "boolean"
                    },
                    {
                        "description": "Sets the limit of items per page",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Determines page number, starts at 1",
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_services_decort.ListComputeFullResponse"
                        }
                    }
                },
                "summary": "List Compute",
                "tags": [
                    "dynamix"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create Compute with DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute create options",
                        "in": "body",
                        "name": "compute",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.ComputeCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                },
                "summary": "Create Compute",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "get compute info from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_compute.RecordCompute"
                        }
                    }
                },
                "summary": "compute info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/agents/{agentId}/backups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Backups with agent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.AgentBackup"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List agent backups info",
                "tags": [
                    "agent (User)"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create Backup with agent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup info for agent",
                        "in": "body",
                        "name": "backup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AgentBackupCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create backup with agent",
                "tags": [
                    "agent (User)"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/agents/{agentId}/backups/{backupId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete backup with agent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete backup with agent",
                "tags": [
                    "agent (User)"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/agents/{agentId}/backups/{backupId}/restore/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Restore backup with agent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Restore backup with agent",
                "tags": [
                    "agent (User)"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/agents/{agentId}/schedules/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "ListSchedules",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ScheduleAgent"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List Schedules",
                "tags": [
                    "agent (User)"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create Schedule",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule info",
                        "in": "body",
                        "name": "schedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ScheduleAgentCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create Schedules",
                "tags": [
                    "agent (User)"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/agents/{agentId}/schedules/{scheduleId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete schedule with agent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete schedule with agent",
                "tags": [
                    "agent (User)"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Update schedule for agent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Agent ID",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule ID",
                        "in": "path",
                        "name": "scheduleId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Schedule info",
                        "in": "body",
                        "name": "schedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ScheduleAgentUpdateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Update schedule for agent",
                "tags": [
                    "agent (User)"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/backups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get compute backups",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackup"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get compute backups info",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/backups/multiple/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create new compute backups multiple",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "backup info",
                        "in": "body",
                        "name": "backup",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackupMultipleCreateOptions"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackup"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Create compute backups",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/backups/restore/multiple/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Restore compute backups",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "backup info for restore",
                        "in": "body",
                        "name": "backup",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackupMultipleRestoreOptions"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ComputeRestore"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Restore compute backups",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/disks/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "get disks in compute info from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.ComputeDisk"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "disks in compute info",
                "tags": [
                    "dynamix"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Add new Disks to Compute",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disks add options",
                        "in": "body",
                        "name": "compute",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models_reqtypes.DisksAddOptions"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Add new Disks to Compute",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/disks/{diskId}/backups/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Create new compute backup",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disk ID",
                        "in": "path",
                        "name": "diskId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "backup info",
                        "in": "body",
                        "name": "backup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackupCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ComputeBackup"
                        }
                    }
                },
                "summary": "Create compute backup",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/disks/{diskId}/backups/{backupId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Delete compute backup",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disk ID",
                        "in": "path",
                        "name": "diskId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete compute backup",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/disks/{diskId}/backups/{backupId}/restore/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Restore compute backup",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disk ID",
                        "in": "path",
                        "name": "diskId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Backup ID",
                        "in": "path",
                        "name": "backupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/backup.InfoRestoredDisk"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Restore compute backup",
                "tags": [
                    "backups_compute_dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/start/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "start compute DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "compute info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/stop/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "stop compute DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "compute info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/computes/{computeId}/vins/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "get vins in compute info from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Compute ID",
                        "in": "path",
                        "name": "computeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "vins in compute info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/disks/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Disks from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ListDisks"
                        }
                    }
                },
                "summary": "List Disk",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/disks/{diskId}/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "get Disk info from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Disk ID",
                        "in": "path",
                        "name": "diskId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.RecordDisk"
                        }
                    }
                },
                "summary": "Disk info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/grids/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "get grid info from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/locations.ListLocations"
                        }
                    }
                },
                "summary": "grid info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/grids/{gridId}/backups/paths/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "get grid info from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Grid ID",
                        "in": "path",
                        "name": "gridId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "grid info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/images/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Image from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_image.ListImages"
                        }
                    }
                },
                "summary": "List Image",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/rg/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Rg from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rg.ListResourceGroups"
                        }
                    }
                },
                "summary": "List Rg",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/seps/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "Get Seps info",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_disks.ListTypes"
                        }
                    }
                },
                "summary": "Get Seps info",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/dynamix/{accountId}/vins/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "deprecated": true,
                "description": "List Vins from DE account",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repository_basistech_ru_BASIS_decort-golang-sdk_pkg_cloudapi_vins.ListVINS"
                        }
                    }
                },
                "summary": "List Vins",
                "tags": [
                    "dynamix"
                ]
            }
        },
        "/groups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List groups info",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.Group"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List groups",
                "tags": [
                    "groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create group",
                "parameters": [
                    {
                        "description": "Group info",
                        "in": "body",
                        "name": "group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.GroupCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "summary": "Create group",
                "tags": [
                    "groups"
                ]
            }
        },
        "/groups/{groupId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete group by group ID",
                "parameters": [
                    {
                        "description": "Group ID",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Delete group",
                "tags": [
                    "groups"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get group by group ID",
                "parameters": [
                    {
                        "description": "Group ID",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Get group",
                "tags": [
                    "groups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update group",
                "parameters": [
                    {
                        "description": "Group ID",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Group info",
                        "in": "body",
                        "name": "group",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.GroupUpdateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Update group",
                "tags": [
                    "groups"
                ]
            }
        },
        "/groups/{groupId}/users/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "List group users",
                "parameters": [
                    {
                        "description": "Group ID",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.CompactUser"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "List group users",
                "tags": [
                    "groups"
                ]
            }
        },
        "/groups/{groupId}/users/{userId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete user from group",
                "parameters": [
                    {
                        "description": "Group ID",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Delete user from group",
                "tags": [
                    "groups"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Add user to group",
                "parameters": [
                    {
                        "description": "Group ID",
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Add user to group",
                "tags": [
                    "groups"
                ]
            }
        },
        "/login/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Login user and response with JWT",
                "parameters": [
                    {
                        "description": "Auth param",
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.LoginRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AuthResponse"
                        }
                    },
                    "403": {
                        "description": "Неверный логин/пароль, аккаунт заблокирован/деактивирован или превышено максимальное количество сессий",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Login user and response with JWT",
                "tags": [
                    "auth"
                ]
            }
        },
        "/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Logout user and remove current session. Accepts token via header `X-JWT-Token` or JSON body.",
                "parameters": [
                    {
                        "description": "JWT Token in JSON body (optional if provided in header)",
                        "in": "body",
                        "name": "token",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.LogoutRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "message: Logout successful",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "401": {
                        "description": "message: Missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Logout user",
                "tags": [
                    "auth"
                ]
            }
        },
        "/openidconfig": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieves the existing OpenID configuration from the database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OpenID Configuration data",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.OpenIDConfigurations"
                        }
                    },
                    "403": {
                        "description": "message: User ID not found in context or not an admin user",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Get OpenID Configurations",
                "tags": [
                    "OpenID config"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Saves a new OpenID configuration to the database",
                "parameters": [
                    {
                        "description": "OpenID Configuration",
                        "in": "body",
                        "name": "OpenIDConfig",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.OpenIDConfigurations"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "message: OpenID Configurations saved successfully",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "message: User ID not found in context or not an admin user",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Save OpenID Configurations",
                "tags": [
                    "OpenID config"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Saves a new OpenID configuration to the database",
                "parameters": [
                    {
                        "description": "OpenID Configuration",
                        "in": "body",
                        "name": "OpenIDConfig",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.OpenIDConfigurations"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "message: OpenID Configurations updated successfully",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "message: User ID not found in context or not an admin user",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "error: Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Save OpenID Configurations",
                "tags": [
                    "OpenID config"
                ]
            }
        },
        "/platform/cache/invalidate/{resourceType}/{accountId}/{resourceId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Инвалидация кэша по переданному типу ресурса, AccountID и ResourceID",
                "parameters": [
                    {
                        "description": "Тип ресурса (disk, vm, vmAdmin, vmDisk, sepAdmin)",
                        "in": "path",
                        "name": "resourceType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "ID аккаунта",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "ID ресурса",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Результат инвалидации кэша",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при удалении из кэша",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Инвалидация кэша по ресурсу",
                "tags": [
                    "Cache"
                ]
            }
        },
        "/platform/diskAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Выполняет презентацию или депрезентацию диска на указанном узле.",
                "parameters": [
                    {
                        "description": "Запрос на выполнение действия с диском",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DiskAdminRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Операция успешно выполнена\" example:{\"message\": \"Операция выполнена успешно\", \"success\": true}",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DiskAdminResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные входные данные\" example:{\"message\": \"Некорректный формат запроса\", \"success\": false}",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DiskAdminResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка выполнения операции с диском\" example:{\"message\": \"Ошибка выполнения операции с диском\", \"success\": false}",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.DiskAdminResponse"
                        }
                    }
                },
                "summary": "Управление диском",
                "tags": [
                    "Disks"
                ]
            }
        },
        "/platform/getDisk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение информации о диске",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetDiskRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.DiskDetail"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении информации о диске",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить информацию о диске",
                "tags": [
                    "Disks"
                ]
            }
        },
        "/platform/getSepAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve SEP record information based on Account ID and SEP ID",
                "parameters": [
                    {
                        "description": "SEP Request",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetSepRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved SEP record",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.SEPRecord"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении данных SEP",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Get SEP information",
                "tags": [
                    "SEPs"
                ]
            }
        },
        "/platform/getVm": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение информации о ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetVmRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.VMData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении информации о ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить информацию о ВМ",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/getVmAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение информации о ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetVmRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.VMData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении информации о ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить информацию о ВМ",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/getVmDisks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение списка дисков ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetVmDisksRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.DiskDetailList"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка дисков ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список дисков ВМ",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/listAvailableSepAndPools": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetSepAndPoolRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными SEP",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список доступных SEP и пулов",
                "tags": [
                    "SepAndPools"
                ]
            }
        },
        "/platform/listAvailableSepAndPoolsAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Параметры запроса",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetSepAndPoolRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными SEP (админ)",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список доступных SEP и пулов для администратора",
                "tags": [
                    "SepAndPools"
                ]
            }
        },
        "/platform/listImages": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение списка образов",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListImagesRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ImageItemsData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка образов",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список образов",
                "tags": [
                    "Images"
                ]
            }
        },
        "/platform/listNodesAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve list of nodes based on Account ID and filters",
                "parameters": [
                    {
                        "description": "Nodes Request",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListNodesRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Nodes list",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ListNodesData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "List Nodes Admin request",
                "tags": [
                    "Nodes"
                ]
            }
        },
        "/platform/listRgs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение списка RGs",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListRgsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ResourceGroupItemData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка RGs",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список RGs",
                "tags": [
                    "Resource Groups"
                ]
            }
        },
        "/platform/listSeps": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Возвращает список SEPs на основе указанных параметров",
                "parameters": [
                    {
                        "description": "Запрос на получение списка SEPs",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListSepsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ListTypes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список SEPs",
                "tags": [
                    "SEPs"
                ]
            }
        },
        "/platform/listSepsAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Возвращает список SEPs на основе указанных параметров",
                "parameters": [
                    {
                        "description": "Запрос на получение списка SEPs",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListSepsRequestAdmin"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ListSEP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список SEPs",
                "tags": [
                    "SEPs"
                ]
            }
        },
        "/platform/listVins": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение списка VINS",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.ListVinsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.VinsItemsData"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка VINS",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список VINS",
                "tags": [
                    "VINS"
                ]
            }
        },
        "/platform/listVms": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на получение списка ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.GetListVmsRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.VMDataList"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Получить список ВМ",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/newVm": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на создание ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.NewVMData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ID созданной ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Создать виртуальную машину (ВМ)",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/newVmBlank": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на создание заготовки ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.NewVMBlankData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ID созданной заготовки ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании заготовки ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Создать заготовку для виртуальной машины (ВМ)",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/newVmDisk": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на добавление диска",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.NewDiskDetail"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ID созданного диска",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при добавлении диска",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Добавить диск к виртуальной машине (ВМ)",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/newVmTag": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на добавление тега ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.TagAddRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешное сообщение об добавлении тега ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при добавлении тега ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Добавление тега для ВМ",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/removeVmTag": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на удаление тега ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.TagRemoveRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешное сообщение об удалении тега ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при удалении тега ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Удаление тега для ВМ",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/startVm": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на запуск ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.StartVmRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешное сообщение о запуске ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при запуске ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Запустить виртуальную машину (ВМ)",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/stopVm": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Запрос на остановку ВМ",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.StopVmRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешное сообщение об остановке ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Ошибка при остановке ВМ",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Остановить виртуальную машину (ВМ)",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/platform/stopVmAdmin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Остановка виртуальной машины с возможностью форсированной остановки и депрезентации.",
                "parameters": [
                    {
                        "description": "Запрос на остановку ВМ",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.StopVmRequestAdmin"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "{\"success\": true, \"message\": \"ВМ остановлена\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "{\"success\": false, \"message\": \"Неверный формат данных\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "{\"success\": false, \"message\": \"Ошибка при остановке ВМ\"}",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Остановка виртуальной машины",
                "tags": [
                    "Virtual Machines"
                ]
            }
        },
        "/repository/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get a list of repositories available for use",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.Repository"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get a list of repositories available for use",
                "tags": [
                    "repository"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Add repository for download images",
                "parameters": [
                    {
                        "description": "Repository info",
                        "in": "body",
                        "name": "repository",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.RepositoryCreateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.Repository"
                        }
                    }
                },
                "summary": "Add repository for download images",
                "tags": [
                    "repository"
                ]
            }
        },
        "/swagger/host/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update Host in swagger",
                "parameters": [
                    {
                        "description": "Host",
                        "in": "body",
                        "name": "host",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.HostRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "summary": "Update Host",
                "tags": [
                    "swagger"
                ]
            }
        },
        "/users/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get list of users with optional filtering by username and group",
                "parameters": [
                    {
                        "description": "Filter users by username (partial match)",
                        "in": "query",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by group name (partial match)",
                        "in": "query",
                        "name": "group",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.CompactUser"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "List users",
                "tags": [
                    "users"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create user with password",
                "parameters": [
                    {
                        "description": "Auth param",
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.CreateUserRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Create user with password",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/change-password/": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "description": "Change user password by providing username, old password, new password, and confirmation of the new password",
                "parameters": [
                    {
                        "description": "Password change request",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ChangePasswordRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Response with success message and username",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Error message",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ErrorResponse"
                        }
                    }
                },
                "summary": "Change user password",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/groups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get User Groups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.UserGroup"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get the groups to which a user belongs",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/refresh/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Renew JWT",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.AuthResponse"
                        }
                    }
                },
                "summary": "Renew JWT",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/userslog/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get paginated logs for a user, with optional time filtering using Unix time",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "query",
                        "name": "userId",
                        "type": "integer"
                    },
                    {
                        "default": 1,
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    },
                    {
                        "default": 10,
                        "description": "Number of logs per page",
                        "in": "query",
                        "name": "count",
                        "type": "integer"
                    },
                    {
                        "description": "Start time in Unix timestamp",
                        "in": "query",
                        "name": "logAfter",
                        "type": "integer"
                    },
                    {
                        "description": "End time in Unix timestamp",
                        "in": "query",
                        "name": "logBefore",
                        "type": "integer"
                    },
                    {
                        "description": "Search logs by text",
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.VPPaginatedLog"
                        }
                    },
                    "400": {
                        "description": "Invalid User ID or pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "403": {
                        "description": "No permission to view logs",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Get User paginated logs",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{userId}/": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete user with ID",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Delete user with ID",
                "tags": [
                    "users"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get user by ID",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.User"
                        }
                    }
                },
                "summary": "Get User info",
                "tags": [
                    "users"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Change user password",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Auth param",
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ChangeUserRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                },
                "summary": "Change user password",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{userId}/activation/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Активирует или деактивирует пользователя по ID. Укажите действие (activate или deactivate) в теле запроса.",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Запрос на изменение статуса пользователя",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models.ChangeStatusRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с сообщением",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос или неверные параметры",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для выполнения действия",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Change user status",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{userId}/force-password-change/": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Устанавливает обязательную смену пароля для пользователя по ID. Требуется права администратора.",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с сообщением",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для выполнения действия",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                },
                "summary": "Force password change",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{userId}/groups/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get User Groups",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/virtualprotect_internal_models.UserGroup"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get the groups to which a user belongs",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{userId}/logs/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get user by ID",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.VPLog"
                        }
                    }
                },
                "summary": "Get User log",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{userId}/pglogs/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Get paginated logs for a user by their ID, with optional time filtering using Unix time",
                "parameters": [
                    {
                        "description": "User ID",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 1,
                        "description": "Page number",
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    },
                    {
                        "default": 10,
                        "description": "Number of logs per page",
                        "in": "query",
                        "name": "count",
                        "type": "integer"
                    },
                    {
                        "description": "Start time in Unix timestamp",
                        "in": "query",
                        "name": "logAfter",
                        "type": "integer"
                    },
                    {
                        "description": "End time in Unix timestamp",
                        "in": "query",
                        "name": "logBefore",
                        "type": "integer"
                    },
                    {
                        "description": "Search logs by text",
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/virtualprotect_internal_models_dbtypes.VPPaginatedLog"
                        }
                    },
                    "400": {
                        "description": "Invalid User ID or pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                },
                "summary": "Get User paginated logs",
                "tags": [
                    "users"
                ]
            }
        }
    },
    "schemes": [
        "https"
    ],
    "swagger": "2.0"
}